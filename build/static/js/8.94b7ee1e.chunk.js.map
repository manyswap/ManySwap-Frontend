{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","utils/erc20.ts","hooks/useTokenBalance.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","contexts/PastLotteryDataContext.tsx","utils/lotteryUtils.js","hooks/useGetLotteryHasDrawn.ts","hooks/useTimer.ts","utils/getTimePeriods.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","hooks/useTickets.ts","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","hooks/useBuyLottery.ts","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","hooks/useApproval.ts","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","hooks/useAllowance.ts","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","getContract","provider","address","Web3","eth","Contract","erc20","getAllowance","lpContract","masterChefContract","account","a","methods","allowance","options","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","balance","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","cakeContract","cakeABI","getCakeAddress","supply","BigNumber","fetchTotalSupply","useBurnedBalance","setBalance","useWallet","ethereum","res","fetchBalance","useTokenBalance","fastRefresh","Wrapper","styled","div","theme","colors","primary","ExpandableSectionButton","onClick","expanded","aria-label","role","color","bold","defaultProps","React","createContext","mostRecentLotteryNumber","historyError","historyData","multiCall","abi","calls","web3","getWeb3","multi","MultiCallAbi","getMulticallAddress","itf","Interface","newCalls","slice","calldata","map","toLowerCase","encodeFunctionData","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","lotteryContract","price","numbersList","times","pow","toString","send","from","on","tx","transactionHash","console","error","getTickets","ticketsContract","customLotteryNum","issueIndex","getTicketsAmount","calls1","Array","apply","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","eq","push","calls3","tickets","getLotteryStatus","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finanltokenIds","r","getTotalClaim","drawed","calls4","claim","reduce","p","c","sum","getTotalRewards","getMax","maxNumber","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","amount","LOTTERY_TICKET_PRICE","getWinningNumbers","numbers","parseInt","historyNumbers","winningNumbers","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","useLottery","state","fetchLotteryStatus","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","setInterval","prevMillis","clearInterval","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getLotteryDrawStep","ProgressWrapper","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","LotteryProgress","TranslateString","useI18n","timeUntilTicketSale","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","showProgressBunny","fontSize","Title","Heading","attrs","as","size","secondary","Blurb","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","textSubtle","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","useLotteryTicket","useCallback","useWinningNumbers","winngNumbers","setWinningNumbers","useMatchingRewardLength","matchingNumbers","setMatchingNumbers","matchedNumbaers","useTickets","lotteryNumber","setTickets","StyledLoading","Loading","RewardP","TicketsList","props","StyledButton","Button","spacing","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","rewardMatch","number","n","listItems","emoji","join","title","TICKETS","variant","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","onMultiClaim","lotteryTicketContract","txHash","useMultiClaimLottery","useModal","onPresentMyTickets","handleClaim","winnings","getBalanceNumber","toFixed","style","marginRight","fullWidth","disabled","TextWrapper","StyledText","Image","img","md","NoPrizesContent","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","UnlockButton","useApproval","onPresentApprove","requestedApproval","setRequestedApproval","onApprove","useLotteryApprove","handleApprove","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onChange","onSelectMax","value","Input","endAdornment","placeholder","toLocaleString","BuyTicketModal","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getFullDisplayBalance","maxTickets","onMultiBuy","useMultiBuyLottery","setMax","fetchMax","useMaxNumber","handleBuy","random","handleSelectMax","Number","LOTTERY_MAX_NUMBER_OF_TICKETS","e","currentTarget","Tips","num","Announce","Final","ModalActions","WarningModal","CardActions","TicketCard","setAllowance","useCake","fetchAllowance","refreshInterval","useLotteryAllowance","cakeBalance","ticketsLength","PurchaseWarningModal","tokenName","onPresentBuy","toNumber","isSecondCard","CardHeader","TicketCountWrapper","TicketActions","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","setRewards","useTotalRewards","lotteryPrizeWithCommaSeparators","currentLotteryNumber","useContext","PastLotteryDataContext","mb","alignItems","justifyContent","height","width","fontWeight","Link","Row","RabbitRow","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBox","RabbitBoxSmall","StyledCardHeader","CardWrapper","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","responsive","marginLeft","href","LayoutWrapper","StyledImage","StyledLink","HowItWorks","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","fetch","response","json","data","Error","SearchWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","PastRoundCardError","message","LotteryCardHeading","valueToDisplay","children","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match1Ticket","match2Ticket","match3Ticket","poolSize","TicketRound","PancakeRoundIcon","oneTicketMatches","PastLotteryActions","PastRoundCard","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","Lottery","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","Divider","Provider"],"mappings":"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","file":"static/js/8.94b7ee1e.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, '0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? 'Hide' : 'Details'}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { LOTTERY_TICKET_PRICE } from 'config'\nimport { getMulticallAddress } from './addressHelpers'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract(MultiCallAbi, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract.methods\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIndex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\n  const length = await getTicketsAmount(ticketsContract, account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (new BigNumber(ticketIssue).eq(issueIndex)) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n\n  await getLotteryStatus(lotteryContract)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.methods.balanceOf(account).call()\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.methods.issueIndex().call()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finanltokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finanltokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finanltokenIds.length > 200) {\n    finanltokenIds = finanltokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.methods\n      .multiClaim(finanltokenIds)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIndex = await lotteryContract.methods.issueIndex().call()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length }).map((a, i) => [\n      ticketsContract.options.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenids = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIndex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenids.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenids.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BigNumber(0))\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return BigNumber(0)\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return lotteryContract.methods.getTotalRewards(issueIndex).call()\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.methods.maxNumber().call()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.methods.drawed().call()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIndex = await lotteryContract.methods.issueIndex().call()\n  const drawed = await lotteryContract.methods.drawed().call()\n  if (!drawed) {\n    issueIndex -= 1\n  }\n  try {\n    const amount = await lotteryContract.methods.historyAmount(issueIndex, 5 - matchNumber).call()\n    return amount / 1e18 / LOTTERY_TICKET_PRICE\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  const numbers = []\n  const drawed = await lotteryContract.methods.drawed().call()\n\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIndex - 1, i).call()).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\n    }\n  }\n  return numbers\n}\n","import { useEffect, useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useLottery } from 'hooks/useContract'\nimport { getLotteryStatus } from 'utils/lotteryUtils'\n\n/**\n * Returns whether or not the current lottery has drawn numbers\n *\n * @return {Boolean}\n */\nconst useGetLotteryHasDrawn = () => {\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n\n  useEffect(() => {\n    if (account && lotteryContract) {\n      const fetchLotteryStatus = async () => {\n        const state = await getLotteryStatus(lotteryContract)\n        setLotteryHasDrawn(state)\n      }\n\n      fetchLotteryStatus()\n    }\n  }, [account, lotteryContract])\n\n  return lotteryHasDrawn\n}\n\nexport default useGetLotteryHasDrawn\n","import { useState, useEffect } from 'react'\n\nexport const useCurrentTime = () => {\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\n\n  useEffect(() => {\n    const tick = () => {\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\n    }\n\n    const timerID = setInterval(() => tick(), 1000)\n\n    return () => clearInterval(timerID)\n  }, [])\n\n  return currentMillis\n}\n\nexport default useCurrentTime\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import getTimePeriods from 'utils/getTimePeriods'\n\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\nconst lotteryDrawHoursUtc = [2, 14]\n\nconst getClosestLotteryHour = (currentHour) => {\n  switch (true) {\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[0]\n    case currentHour < lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[1]\n    default:\n      return 0\n  }\n}\n\nconst getNextLotteryDrawTime = (currentMillis) => {\n  const date = new Date(currentMillis)\n  const currentHour = date.getUTCHours()\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\n  // ...and current time is between 02:00am & 23:59pm UTC\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\n  let millisTimeOfNextDraw\n\n  if (nextLotteryIsTomorrow) {\n    const tomorrow = new Date(currentMillis)\n    const nextDay = tomorrow.getUTCDate() + 1\n    tomorrow.setUTCDate(nextDay)\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\n  } else {\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\n  }\n\n  return millisTimeOfNextDraw\n}\n\n// @ts-ignore\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\n\nexport const getTicketSaleTime = (currentMillis): string => {\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getLotteryDrawTime = (currentMillis): string => {\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getTicketSaleStep = () => (1 / 12) * 100\n\nexport const getLotteryDrawStep = (currentMillis) => {\n  const msBetweenLotteries = 43200000\n  const endTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = endTime - currentMillis\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\n  return 100 - percentageRemaining\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Progress } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport {\n  getLotteryDrawTime,\n  getLotteryDrawStep,\n  getTicketSaleTime,\n  getTicketSaleStep,\n} from '../helpers/CountdownHelpers'\n\nconst ProgressWrapper = styled.div`\n  display: block;\n  width: 100%;\n`\n\nconst TopTextWrapper = styled.div`\n  margin-top: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst BottomTextWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst StyledPrimaryText = styled(Text)`\n  margin-right: 16px;\n`\nconst LotteryProgress = () => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\n\n  return (\n    <ProgressWrapper>\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\n      <TopTextWrapper>\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"contrast\">\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\n        </StyledPrimaryText>\n        <Text fontSize=\"20px\" bold color=\"invertedContrast\">\n          {lotteryHasDrawn ? TranslateString(0, 'Until ticket sale') : TranslateString(0, 'Until lottery draw')}\n        </Text>\n      </TopTextWrapper>\n      {lotteryHasDrawn && (\n        <BottomTextWrapper>\n          <Text color=\"invertedContrast\">\n            {timeUntilLotteryDraw} {TranslateString(0, 'Until lottery draw')}\n          </Text>\n        </BottomTextWrapper>\n      )}\n    </ProgressWrapper>\n  )\n}\n\nexport default LotteryProgress\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Container from 'components/layout/Container'\nimport LotteryProgress from './LotteryProgress'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n  }\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <Title>{TranslateString(708, 'The CAKE Lottery')}</Title>\n          <Blurb>{TranslateString(710, 'Buy tickets with CAKE')}</Blurb>\n          <Blurb>{TranslateString(712, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\n        </LeftWrapper>\n        <RightWrapper>\n          <LotteryProgress />\n        </RightWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWallet()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(new BigNumber(0))\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWallet()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\n\n  return { claimLoading, claimAmount }\n}\n\nexport const useWinningNumbers = () => {\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winngNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbaers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Loading: React.FC = () => <StyledLoading />\n\nconst StyledLoading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useCallback } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const TranslateString = useI18n()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return <p key={index}>{number.toString()}</p>\n  })\n\n  return (\n    <Modal\n      title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`, { TICKETS: myTicketNumbers.length })}\n      onDismiss={onDismiss}\n    >\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {TranslateString(438, 'Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\nconst PrizesWonContent: React.FC = () => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <Won />\n      </IconWrapper>\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\n        {TranslateString(660, 'You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" size=\"lg\">\n              CAKE\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button fullWidth disabled={requestedClaim} onClick={handleClaim}>\n          {TranslateString(1056, 'Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {TranslateString(432, 'View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n  const lotteryTicketContract = useLotteryTicket()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useLottery()\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const TranslateString = useI18n()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\n      <TextWrapper>\n        <StyledText color=\"textDisabled\">{TranslateString(726, 'Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n          {TranslateString(432, 'View your tickets')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  ${(props) =>\n    props.isDisabled\n      ? `  \n        margin-top: 16px;\n        background-color: unset;\n        box-shadow: unset;\n        border: 1px solid ${props.theme.colors.textDisabled};\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst YourPrizesCard: React.FC = () => {\n  const { claimAmount } = useTotalClaim()\n\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <Ticket />\n        </IconWrapper>\n        <StyledHeading size=\"md\">{TranslateString(1080, 'Unlock wallet to access lottery')}</StyledHeading>\n        <UnlockButton />\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import { useCallback, useState } from 'react'\nimport { useLotteryApprove } from './useApprove'\n\nexport const useApproval = (onPresentApprove: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { onApprove } = useLotteryApprove()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n      onPresentApprove()\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, onPresentApprove])\n\n  return { handleApprove, requestedApproval }\n}\n\nexport default useApproval\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  availableSymbol: string\n  onSelectMax?: () => void\n}\n\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledTokenInput>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TicketInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\nimport useI18n from 'hooks/useI18n'\nimport { LOTTERY_MAX_NUMBER_OF_TICKETS, LOTTERY_TICKET_PRICE } from 'config'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onConfirm?: (amount: string, numbers: Array<number>) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(LOTTERY_TICKET_PRICE)), 10)\n  }, [max])\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\n\n  const { onMultiBuy } = useMultiBuyLottery()\n  const maxNumber = useMaxNumber()\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true)\n      const length = parseInt(val)\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      const numbers = Array.apply(null, { length }).map(() => [\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n      ])\n      const txHash = await onMultiBuy(LOTTERY_TICKET_PRICE.toString(), numbers)\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedBuy(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > LOTTERY_MAX_NUMBER_OF_TICKETS) {\n      setVal(LOTTERY_MAX_NUMBER_OF_TICKETS.toString())\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const cakeCosts = (amount: string): number => {\n    return +amount * LOTTERY_TICKET_PRICE\n  }\n  return (\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol=\"TICKET\"\n        availableSymbol=\"CAKE\"\n      />\n      <div>\n        <Tips>{TranslateString(999, `1 Ticket = ${LOTTERY_TICKET_PRICE} CAKE`, { num: LOTTERY_TICKET_PRICE })}</Tips>\n      </div>\n      <div>\n        <Announce>\n          {TranslateString(\n            478,\n            'Ticket purchases are final. Your CAKE cannot be returned to you after buying tickets.',\n          )}\n        </Announce>\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} CAKE`)}</Final>\n      </div>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          fullWidth\n          disabled={\n            pendingTx ||\n            parseInt(val) > Number(maxTickets) ||\n            parseInt(val) > LOTTERY_MAX_NUMBER_OF_TICKETS ||\n            parseInt(val) < 1\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #ed4b9e;\n`\n","import React from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\n        <br />\n        {TranslateString(470, 'Your CAKE will not be returned to you after you spend it to buy tickets.')}\n        <br />\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burned after the draw.')}\n        <br />\n        {TranslateString(\n          474,\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button fullWidth onClick={onDismiss}>\n          {TranslateString(476, 'I understand')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useLotteryAllowance } from 'hooks/useAllowance'\nimport useTickets from 'hooks/useTickets'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { useApproval } from 'hooks/useApproval'\nimport BuyTicketModal from './BuyTicketModal'\nimport MyTicketsModal from './UserTicketsModal'\nimport PurchaseWarningModal from './PurchaseWarningModal'\n\nconst CardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    justify-content: space-between;\n  }\n`\n\nconst TicketCard: React.FC = () => {\n  const TranslateString = useI18n()\n  const allowance = useLotteryAllowance()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"CAKE\" />)\n  const { handleApprove, requestedApproval } = useApproval(onPresentApprove)\n\n  const renderLotteryTicketButtons = () => {\n    if (!allowance.toNumber()) {\n      return (\n        <>\n          <Button fullWidth disabled>\n            {TranslateString(432, 'View your tickets')}\n          </Button>\n          <Button fullWidth disabled={requestedApproval} onClick={handleApprove}>\n            {TranslateString(494, 'Approve CAKE')}\n          </Button>\n        </>\n      )\n    }\n    return (\n      <>\n        <Button\n          style={{ marginRight: '8px' }}\n          fullWidth\n          disabled={ticketsLength === 0}\n          variant=\"secondary\"\n          onClick={onPresentMyTickets}\n        >\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n        <Button id=\"lottery-buy-start\" fullWidth onClick={onPresentBuy}>\n          {TranslateString(430, 'Buy ticket')}\n        </Button>\n      </>\n    )\n  }\n\n  return (\n    <CardActions>\n      {lotteryHasDrawn ? (\n        <Button disabled> {TranslateString(874, 'On sale soon')}</Button>\n      ) : (\n        renderLotteryTicketButtons()\n      )}\n    </CardActions>\n  )\n}\n\nexport default TicketCard\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useCake, useLottery } from './useContract'\nimport { getAllowance } from '../utils/erc20'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const lotteryContract = useLottery()\n  const cakeContract = useCake()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await getAllowance(cakeContract, lotteryContract, account)\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && cakeContract && cakeContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, cakeContract, lotteryContract])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, TicketRound, Text, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTickets from 'hooks/useTickets'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport TicketActions from './TicketActions'\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\n\ninterface CardProps {\n  isSecondCard?: boolean\n}\n\nconst StyledCard = styled(Card)<CardProps>`\n  ${(props) =>\n    props.isSecondCard\n      ? `  \n        margin-top: 16px;\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst CardHeader = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst TicketCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\n\n  return (\n    <StyledCard isSecondCard={isSecondCard}>\n      <CardBody>\n        <CardHeader>\n          <IconWrapper>\n            <TicketRound />\n          </IconWrapper>\n          {lotteryHasDrawn ? (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(870, 'Until ticket sale:')}\n              </Text>\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\n            </TicketCountWrapper>\n          ) : (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(724, 'Your tickets for this round')}\n              </Text>\n              <Heading size=\"lg\">{ticketsLength}</Heading>\n            </TicketCountWrapper>\n          )}\n        </CardHeader>\n        <TicketActions />\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  oneTicketMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const TranslateString = useI18n()\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(756, 'No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {TranslateString(754, 'Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(752, 'Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading size=\"md\">4</Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem>\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { useTotalRewards } from 'hooks/useTickets'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\nimport PrizeGrid from '../PrizeGrid'\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Right = styled.div`\n  display: flex;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst Left = styled.div`\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst PrizeCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 100%;\n  }\n`\n\nconst TotalPrizesCard = () => {\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const [showFooter, setShowFooter] = useState(false)\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  return (\n    <Card>\n      <CardBody>\n        {account && (\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\n            {currentLotteryNumber > 0 && (\n              <>\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>\n                  {TranslateString(720, `Round #${currentLotteryNumber}`, { num: currentLotteryNumber })}\n                </Text>\n              </>\n            )}\n          </Flex>\n        )}\n        <CardHeading>\n          <Left>\n            <IconWrapper>\n              <PancakeRoundIcon />\n            </IconWrapper>\n            <PrizeCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(722, 'Total Pot:')}\n              </Text>\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} CAKE</Heading>\n            </PrizeCountWrapper>\n          </Left>\n          <Right>\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\n          </Right>\n        </CardHeading>\n      </CardBody>\n      <ExpandingWrapper showFooter={showFooter}>\n        <CardFooter>\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\n        </CardFooter>\n      </ExpandingWrapper>\n    </Card>\n  )\n}\n\nexport default TotalPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Image, Card, CardBody } from '@pancakeswap-libs/uikit'\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\n\nconst WinningNumbers: React.FC = () => {\n  const { account } = useWallet()\n  const winNumbers = useWinningNumbers()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const MatchedNumber4 = useMatchingRewardLength(4)\n  const MatchedNumber3 = useMatchingRewardLength(3)\n  const MatchedNumber2 = useMatchingRewardLength(2)\n  const TranslateString = useI18n()\n\n  return (\n    <CardWrapper>\n      <Card>\n        <CardBody>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n              <Title>\n                {account && lotteryHasDrawn\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\n                  : TranslateString(572, 'Latest Winning Numbers')}\n              </Title>\n              <br />\n            </StyledCardHeader>\n            <Row>\n              {winNumbers.map((number, index) => (\n                // eslint-disable-next-line react/no-array-index-key\n                <TicketNumberBox key={index}>\n                  <CenteredText>{number}</CenteredText>\n                </TicketNumberBox>\n              ))}\n            </Row>\n            <RabbitRow>\n              <RabbitBox>\n                <CardImageFirst>\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\n                </CardImageFirst>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n            </RabbitRow>\n            <RabbitRowSmall>\n              <RabbitBoxSmall>\n                <CardImageFirst>\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\n                </CardImageFirst>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n            </RabbitRowSmall>\n            <Column>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber4}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber3}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber2}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n            </Column>\n            <Link href=\"https://api.pancakeswap.com/api/lottery?page=0&pageSize=25\" target=\"_blank\">\n              {TranslateString(448, 'Export recent winning numbers')}\n            </Link>\n          </StyledCardContentInner>\n        </CardBody>\n      </Card>\n    </CardWrapper>\n  )\n}\nconst Link = styled.a`\n  margin-top: 1em;\n  text-decoration: none;\n  color: #25beca;\n`\n\nconst Row = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst RabbitRow = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst RabbitRowSmall = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`\n\nconst CardImage = styled.div`\n  text-align: center;\n`\n\nconst CardImageFirst = styled.div`\n  text-align: center;\n  margin-left: -1.2em;\n\n  @media (max-width: 600) {\n    margin-left: -0.2em;\n  }\n`\n\nconst RowNoPadding = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst Column = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CenteredText = styled.div`\n  text-align: center;\n  align-items: center;\n`\n\nconst CenteredTextWithPadding = styled.div`\n  text-align: center;\n  align-items: center;\n  padding-left: 2px;\n  padding-right: 2px;\n`\n\nconst TicketNumberBox = styled.div`\n  padding: 10px;\n  border-radius: 12px;\n  background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\n  color: white;\n  font-size: 20px;\n  font-weight: 900;\n  margin: 10px;\n  margin-bottom: 7px;\n  width: 40px;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    margin: 20px;\n    width: 60px;\n  }\n`\n\nconst RabbitBox = styled.div`\n  /* padding: 10px; */\n  border-radius: 12px;\n  margin: 16px 20px;\n  width: 60px;\n`\n\nconst RabbitBoxSmall = styled.div`\n  padding-top: 10px;\n  padding-left: 10px;\n  border-radius: 12px;\n  margin: 20px;\n  width: 20px;\n`\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CardWrapper = styled.div``\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.colors.secondary};\n  font-size: 24px;\n  width: 50vw;\n  text-align: center;\n  font-weight: 1000;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport default WinningNumbers\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Link, Image } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst LayoutWrapper = styled.div`\n  max-width: 500px;\n  margin: 0 auto 40px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst StyledImage = styled(Image)`\n  align-self: center;\n`\n\nconst StyledLink = styled(Link)`\n  align-self: center;\n  margin-top: 16px;\n`\n\nconst HowItWorks = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <LayoutWrapper>\n      <StyledImage src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" width={163} height={140} />\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"secondary\">\n        {TranslateString(632, 'How it works')}\n      </StyledHeading>\n      <Text fontSize=\"16px\">\n        {TranslateString(\n          999,\n          'Spend CAKE to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\n        )}\n      </Text>\n      <StyledLink href=\"https://docs.pancakeswap.finance/lottery-1\">Read more</StyledLink>\n    </LayoutWrapper>\n  )\n}\n\nexport default HowItWorks\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport YourPrizesCard from './components/YourPrizesCard'\nimport UnlockWalletCard from './components/UnlockWalletCard'\nimport TicketCard from './components/TicketCard'\nimport TotalPrizesCard from './components/TotalPrizesCard'\nimport WinningNumbers from './components/WinningNumbers'\nimport HowItWorks from './components/HowItWorks'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\n`\n\nconst NextDrawPage: React.FC = () => {\n  const { account } = useWallet()\n  const { claimAmount } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <>\n      <Cards>\n        <div>\n          <TotalPrizesCard />\n        </div>\n        <SecondCardColumnWrapper isAWin={isAWin}>\n          {!account ? (\n            <UnlockWalletCard />\n          ) : (\n            <>\n              <YourPrizesCard />\n              <TicketCard isSecondCard={isAWin} />\n            </>\n          )}\n        </SecondCardColumnWrapper>\n      </Cards>\n      <HowItWorks />\n      {/* legacy page content */}\n      <WinningNumbers />\n    </>\n  )\n}\n\nexport default NextDrawPage\n","export type DataResponse = {\n  lotteryNumber: number\n  lotteryDate: string\n  lotteryNumbers: number[]\n  poolSize: number\n  burned: number\n  contractLink: string\n  jackpotTicket: number\n  match1Ticket: number | null\n  match2Ticket: number\n  match3Ticket: number\n  match4Ticket: number\n  poolJackpot: number\n  poolMatch3: number\n  poolMatch2: number\n  poolMatch1: number | null\n\n  // TODO: Fill in the error type\n  error: any\n}\n\n/**\n * Get data for a specific lottery\n */\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\n  try {\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\n    const data = await response.json()\n\n    return data\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getLotteryRoundData\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const TranslateString = useI18n()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(lotteryNumber)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(evt.currentTarget.value, 10)\n\n    // The max value will always be the initialLotterNumber which equals\n    // the latest lottery round\n    setIsError(value > initialLotteryNumber)\n    setLotteryNumber(value)\n  }\n\n  return (\n    <Wrapper>\n      <Text>{TranslateString(742, 'Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <Input\n            value={lotteryNumber}\n            type=\"number\"\n            isWarning={isError}\n            max={initialLotteryNumber}\n            onChange={handleChange}\n          />\n          <ButtonWrapper>\n            <Button type=\"submit\" size=\"sm\" disabled={isError}>\n              {TranslateString(744, 'Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","import React from 'react'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@pancakeswap-libs/uikit'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 24px;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n`\n\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\n  const TranslateString = useI18n()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account } = useWallet()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <div>\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} fullWidth>\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n      </div>\n      <div>\n        <ExternalLinkWrap href={contractLink}>{TranslateString(356, 'View on BscScan')}</ExternalLinkWrap>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","const formatLotteryDate = (lotteryDate: string) => {\n  if (!lotteryDate) {\n    return {}\n  }\n\n  const date = new Date(lotteryDate)\n\n  const dateString = date.toDateString()\n  const hours = date.getUTCHours()\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\n\n  return { hours, monthAndDay }\n}\n\nexport default formatLotteryDate\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport formatLotteryDate from '../helpers/formatLotteryDate'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst Timestamp = ({ timeValue }) => {\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\">\n        {monthAndDay}, {hours}:00 UTC\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Timestamp\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const TranslateString = useI18n()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match1Ticket,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody>\n          <CardHeading>\n            <Timestamp timeValue={lotteryDate} />\n            <Heading size=\"md\" mb=\"24px\">\n              Round #{lotteryNumber}\n            </Heading>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\n              Icon={TicketRound}\n            >\n              {TranslateString(999, 'Winning numbers')}\n            </TopLotteryCardHeading>\n            <LotteryCardHeading\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} CAKE`)}\n              Icon={PancakeRoundIcon}\n            >\n              {TranslateString(999, 'Total prizes')}\n            </LotteryCardHeading>\n          </CardHeading>\n        </CardBody>\n        <CardFooter>\n          <PrizeGrid\n            lotteryPrizeAmount={poolSize}\n            jackpotMatches={jackpotTicket}\n            oneTicketMatches={match1Ticket}\n            twoTicketMatches={match2Ticket}\n            threeTicketMatches={match3Ticket}\n            pastDraw\n          />\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n        </CardFooter>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","import React from 'react'\nimport { Card } from '@pancakeswap-libs/uikit'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\n}\n\nexport default PastRoundCard\n","import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (mostRecentLotteryNumber > 0) {\n      fetchRecentLotteryData()\n    }\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport useI18n from 'hooks/useI18n'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\nimport useGetRecentLotteryRoundData from '../../hooks/useGetRecentLotteryRoundData'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const TranslateString = useI18n()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: TranslateString(1076, 'The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: TranslateString(1078, 'Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","import React, { lazy, Suspense, useContext } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst HistoryChart: React.FC = () => {\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const getDataArray = (kind) => {\n    return historyData\n      .map((dataPoint) => {\n        return dataPoint[kind]\n      })\n      .reverse()\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = {\n    labels: getDataArray('lotteryNumber'),\n    datasets: [\n      {\n        label: 'Pool Size',\n        data: getDataArray('poolSize'),\n        yAxisID: 'y-axis-pool',\n        ...lineStyles({ color: '#8F80BA' }),\n      },\n      {\n        label: 'Burned',\n        data: getDataArray('burned'),\n        yAxisID: 'y-axis-burned',\n        ...lineStyles({ color: '#1FC7D4' }),\n      },\n    ],\n  }\n\n  const axesStyles = ({ color, lineHeight }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: 'Kanit, sans-serif',\n        fontColor: color,\n        fontSize: 14,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return value.toLocaleString()\n        },\n      },\n    }\n  }\n\n  const options = {\n    legend: { display: false },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-pool',\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-burned',\n          ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\n        },\n      ],\n      xAxes: [\n        {\n          ...axesStyles({ color: '#452A7A', lineHeight: 1 }),\n        },\n      ],\n    },\n  }\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>Error fetching data</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length > 1 ? (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Line data={chartData} options={options} type=\"line\" />\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 36px 0 28px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{TranslateString(748, 'Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{TranslateString(750, 'Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","import React from 'react'\nimport { Heading, Card, CardBody } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <CardBody>\n        <Heading size=\"md\">{TranslateString(746, 'History')}</Heading>\n        <Legend />\n        <HistoryChart />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PastDrawsHistoryCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: column;\n`\n\nconst BunnyImageWrapper = styled.div`\n  display: flex;\n  margin-top: 32px;\n  justify-content: center;\n`\n\nconst PastDrawsPage: React.FC = () => {\n  return (\n    <Cards>\n      <PastLotteryRoundViewer />\n      <SecondCardColumnWrapper>\n        <PastDrawsHistoryCard />\n        <BunnyImageWrapper>\n          <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\n        </BunnyImageWrapper>\n      </SecondCardColumnWrapper>\n    </Cards>\n  )\n}\n\nexport default PastDrawsPage\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport useI18n from 'hooks/useI18n'\nimport { useLottery } from 'hooks/useContract'\nimport Page from 'components/layout/Page'\nimport Hero from './components/Hero'\nimport Divider from './components/Divider'\nimport NextDrawPage from './NextDrawPage'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useLottery()\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  useEffect(() => {\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (account && lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [account, lotteryContract])\n\n  const handleClick = (index) => {\n    setActiveIndex(index)\n  }\n\n  return (\n    <>\n      <Hero />\n      <Page>\n        <Wrapper>\n          <ButtonMenu activeIndex={activeIndex} onClick={handleClick} size=\"sm\" variant=\"subtle\">\n            <ButtonMenuItem>{TranslateString(716, 'Next draw')}</ButtonMenuItem>\n            <ButtonMenuItem>{TranslateString(718, 'Past draws')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Wrapper>\n        <Divider />\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\n        </PastLotteryDataContext.Provider>\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n"],"sourceRoot":""}