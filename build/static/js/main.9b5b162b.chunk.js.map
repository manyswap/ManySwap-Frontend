{"version":3,"sources":["components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","utils/getRpcUrl.ts","components/Tags.tsx","config/constants/campaigns.ts","config/constants/nfts.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","config/constants/teams.ts","state/teams/helpers.ts","components/layout/Page.tsx","utils/contractHelpers.ts","utils/makeBatchRequest.ts","config/constants/ifo.ts","hooks/useBlock.ts","state/achievements/helpers.ts","state/achievements/index.ts","contexts/RefreshContext.tsx","contexts/Localisation/translationsContext.ts","contexts/BlockContext.tsx","hooks/useRefresh.ts","utils/addressHelpers.ts","utils/achievements.ts","components/UnlockButton.tsx","config/constants/index.ts","config/index.ts","components/layout/Container.tsx","components/PageLoader.tsx","hooks/useApprove.ts","hooks/useHarvest.ts","config/constants/contracts.ts","state/actions.ts","hooks/useI18n.ts","hooks/useContract.ts","components/layout/Flex.tsx","utils/web3.ts","hooks/useWeb3.ts","hooks/useStake.ts","hooks/useUnstake.ts","components/Input/Input.tsx","utils/callHelpers.ts","config/constants/types.ts","utils/multicall.ts","config/constants/pools.ts","state/hooks.ts","utils/formatBalance.ts","config/constants/farms.ts","state/teams/index.tsx","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/ToastListener/index.tsx","views/Pools/components/Card.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Coming.tsx","components/Label/Label.tsx","components/Balance.tsx","components/TokenInput/TokenInput.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Syrup.tsx","views/Collectibles/hooks/useGetBullHiccupClaimableStatus.ts","routerHistory.ts","views/Collectibles/components/ClaimBullHiccupNftModal.tsx","views/Collectibles/components/GlobalCheckBullHiccupClaimStatus.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx","state/toasts/index.ts"],"names":["StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","nodes","process","getNodeUrl","randomIndex","random","CoreTag","variant","outline","startIcon","CommunityTag","BinanceTag","campaigns","id","type","title","badge","campaignMap","Map","forEach","campaign","set","Nfts","name","description","images","lg","md","sm","ipfs","video","webm","mp4","sortOrder","bunnyId","blur","fetchFarms","a","Promise","all","farmsConfig","farmConfig","lpAdress","getAddress","lpAddresses","console","log","getMasterChefAddress","calls","address","tokenAddresses","params","quoteTokenAdresses","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","BigNumber","lpTokenRatio","lpTotalInQuoteToken","pow","times","tokenAmount","quoteTokenAmount","masterchefABI","pid","info","totalAllocPoint","allocPoint","_hex","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","teams","alt","background","textColor","users","points","profileContract","getContract","pancakeProfileAbi","getPancakeProfileAddress","getTeam","teamId","methods","getTeamProfile","call","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","teamsList","staticTeam","merge","getTeams","teamsById","reduce","accum","team","numberTeams","nbTeams","push","makeBatchRequest","teamData","onChainTeamData","Number","Page","Container","mediaQueries","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getPancakeRabbitsAddress","getBunnyFactoryContract","bunnyFactoryAbi","getBunnyFactoryAddress","getBunnySpecialContract","bunnySpecialAbi","getBunnySpecialAddress","batch","getWeb3","BatchRequest","promises","resolve","reject","add","request","err","result","execute","ifos","isActive","subTitle","launchDate","launchTime","saleAmount","raiseAmount","cakeToBurn","projectSiteUrl","currency","currencyAddress","releaseBlockNumber","campaignId","useBlock","BlockContext","getUserPointIncreaseEvents","getPastEvents","fromBlock","toBlock","filter","userAddress","events","getAchievements","pointIncreaseEvents","event","has","returnValues","campaignMeta","get","getAchievementTitle","getAchievementDescription","achievementSlice","addAchievement","addAchievements","concat","setAchievements","clearAchievements","fetchAchievements","achievements","kebabCase","toastTypes","DANGER","RefreshContext","createContext","slow","fast","RefreshContextProvider","useState","setSlow","setFast","useEffect","interval","setInterval","prev","clearInterval","Provider","value","defaultTranslationState","translations","setTranslations","TranslationsContext","BlockContextProvider","previousBlock","useRef","block","setBlock","web3","eth","getBlockNumber","blockNumber","current","useRefresh","fastRefresh","slowRefresh","getCakeAddress","addresses","many","getSaleAddress","sale","masterChef","getMulticallAddress","mulltiCall","getWbnbAddress","wbnb","getLotteryAddress","lottery","getLotteryTicketAddress","lotteryNFT","pancakeProfile","pancakeRabbits","bunnyFactory","getClaimRefundAddress","claimRefund","getPointCenterIfoAddress","pointCenterIfo","bunnySpecial","fallback","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","undefined","ifoCampaignAddresses","pointCenterContract","checkClaimStatuses","claimStatuses","claimStatus","claimableIfoData","claimableIfoDataItem","ifoCampaign","UnlockButton","TranslateString","useI18n","useWallet","connect","reset","onPresentConnectModal","useWalletModal","onClick","communityFarms","isCommunity","tokenSymbol","config","EXPONENTIAL_AT","DECIMAL_PLACES","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_POOL_PID","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","LOTTERY_MAX_NUMBER_OF_TICKETS","LOTTERY_TICKET_PRICE","Wrapper","PageLoader","color","height","width","timeout","useApprove","lpContract","useDispatch","masterChefContract","useMasterchef","onApprove","useCallback","approve","tx","useSousApprove","sousId","sousChefContract","useSousChef","updateUserAllowance","useLotteryApprove","cakeContract","useCake","lotteryContract","useLottery","useHarvest","farmPid","onReward","harvest","txHash","useAllHarvest","farmPids","harvestPromises","useSousHarvest","isUsingBnb","handleHarvest","soushHarvestBnb","soushHarvest","updateUserPendingReward","updateUserBalance","cake","97","56","syrup","sousChef","busd","ust","translationId","foundTranslation","translation","stringId","text","includesVariable","includes","interpolatedText","isEmpty","Object","keys","dataKey","templateKey","RegExp","replace","useContract","abi","contractOptions","useWeb3","Contract","contract","setContract","useERC20","useBunnyFactory","usePancakeRabbits","useProfile","profile","useLotteryTicket","lotteryTicket","poolsConfig","pool","rawAbi","poolCategory","PoolCategory","BINANCE","sousChefBnb","contractAddress","usePointCenterIfoContract","useBunnySpecialContract","useSaleContract","saleAbi","FlexLayout","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","ethereum","refEth","setweb3","useSousStake","handleStake","amount","stake","sousStakeBnb","sousStake","updateUserStakedBalance","onStake","useStake","SYRUPIDS","useSousUnstake","isOldSyrup","onUnstake","unstake","sousEmegencyUnstake","sousUnstake","useUnstake","StyledInputWrapper","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","options","ethers","constants","MaxUint256","send","from","deposit","gas","on","transactionHash","saleManyBnb","saleManyContract","purchaseMANYTokens","withdraw","emergencyWithdraw","QuoteToken","multi","MultiCallAbi","itf","Interface","calldata","toLowerCase","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","pools","tokenName","stakingTokenName","CAKE","stakingTokenAddress","CORE","projectLink","tokenPerBlock","isFinished","image","COMP","stakingLimit","TWT","BNB","COMMUNITY","SYRUP","ZERO","useFetchPublicData","fetchPoolsPublicDataAsync","useFarms","useSelector","useFarmFromPid","useFarmFromSymbol","lpSymbol","useFarmUser","usePools","fetchPoolsUserDataAsync","usePriceBnbBusd","usePriceCakeBusd","bnbPriceUSD","usePriceEthBusd","usePriceEthBnb","priceBnbBusd","useToast","useMemo","toast","pushToast","toastError","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","remove","removeToast","clear","clearToast","useFetchProfile","fetchProfile","isInitialized","isLoading","hasRegistered","hasProfile","useTeam","fetchTeam","useTeams","fetchTeams","useFetchAchievements","useAchievements","getBalanceNumber","balance","decimals","displayBalance","dividedBy","toNumber","getFullDisplayBalance","toFixed","quoteTokenSymbol","contracts","BUSD","MANY","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","startBlock","endBlock","fetchPoolsTotalStatking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","bnbPools","nonMasterPools","masterChefABI","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingMany","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","blockLimits","totalStakings","liveData","blockLimit","totalStaking","stakingTokenBalances","stakingTokenBalance","transformProfileResponse","profileResponse","userId","nftAddress","tokenId","rabbitContract","getUsername","fetch","response","ok","json","username","getProfile","getUserProfile","getBunnyId","nft","nfts","nftItem","localStorage","setItem","JSON","stringify","avatar","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","addPoints","GlobalStyle","createGlobalStyle","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","projectId","parseInt","REACT_APP_CROWDIN_PROJECTID","stringTranslationsApi","StringTranslations","token","REACT_APP_CROWDIN_APIKEY","LanguageContextProvider","storedLangCode","getItem","storedLang","getStoredLang","listLanguageTranslations","fetchTranslationsForSelectedLanguage","then","translationApiResponse","catch","e","error","langObject","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","parse","setIsDark","prevState","dark","light","useTheme","StyledThemeContext","label","icon","href","window","Menu","cakePriceUsd","login","logout","currentLang","langs","setLang","links","profileLink","noProfileLink","showPip","ToastListener","toasts","onRemove","Card","card","CardTitle","Balance","Label","textSubtle","DetailPlaceholder","Value","Footer","Coming","style","padding","role","aria-label","src","as","external","fullWidth","mb","flex","StyledLabel","StyledText","Text","isDisabled","textDisabled","fontSize","unit","previousValue","bold","start","end","duration","separator","defaultProps","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","toLocaleString","DepositModal","onConfirm","onDismiss","val","setVal","pendingTx","setPendingTx","fullBalance","handleChange","currentTarget","handleSelectMax","disabled","WithdrawModal","CompoundModal","BalanceRow","Title","ActionLink","OldSyrupTitle","hasBalance","target","StyledButton","button","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","StyledFooter","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","blocksRemaining","blocksUntilStart","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","marginBottom","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","apy","isBnbPool","stakingTokenContract","requestedApproval","setRequestedApproval","Math","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","display","alignItems","HarvestButton","eq","isNaN","isFinite","PoolTabButtons","stackedOnly","setStackedOnly","useRouteMatch","url","isExact","ToggleWrapper","checked","activeIndex","Hero","Farm","path","ethPriceBnb","poolsWithApy","rewardTokenFarm","stakingTokenFarm","tempMultiplier","stakingTokenPriceInBNB","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","priceToBnb","totalStakingTokenInPool","partition","finishedPools","openPools","stackedOnlyPools","Divider","Flex","exact","orderBy","bunnySpecialContract","useGetBullHiccupClaimableStatus","hasChecked","setHasChecked","claimables","setClaimables","canClaimMultiple","isBullClaimable","isHiccupClaimable","checkClaimableStatus","isSomeClaimable","values","some","status","history","createBrowserHistory","bullNft","nftList","hiccupNft","NftImage","img","showConfetti","confetti","resize","particleCount","startVelocity","gravity","spread","origin","x","y","renderNftPreview","ClaimBullHiccupNftModal","collectibleMessage","delay","flexDirection","justifyContent","GlobalCheckBullHiccupClaimStatus","hasDisplayedModal","onPresentGiftModal","pathname","useLocation","Home","lazy","Farms","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","App","parsedHash","queryString","location","search","r","warn","Global","component","configureStore","devTools","reducer","farmsReducer","toastsReducer","poolsReducer","profileReducer","teamsReducer","achievementsReducer","Providers","rpcUrl","store","chainId","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById","toastsSlice","toastIndex","splice","unshift"],"mappings":"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","file":"static/js/main.9b5b162b.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\n\nconst CoreTag = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag }\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { Nft } from './types'\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    bunnyId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    bunnyId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 4,\n  },\n]\n\nexport default Nfts\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = getAddress(farmConfig.lpAddresses)\n      console.log(\"lpAdresseeeeeeeeeeeeeeeeeth\", getMasterChefAddress())\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: getAddress(farmConfig.tokenAddresses),\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: getAddress(farmConfig.quoteTokenAdresses),\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: getAddress(farmConfig.tokenAddresses),\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: getAddress(farmConfig.quoteTokenAdresses),\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      ] = await multicall(erc20, calls)\n       \n      const abc = new BigNumber(lpTokenBalanceMC);\n      // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n      const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n      // Total value in staking in quote token value\n      const lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(18))\n        .times(new BigNumber(2))\n        .times(lpTokenRatio)\n\n      // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n      const tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n      const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(quoteTokenDecimals))\n        .times(lpTokenRatio)\n        console.log(\"tokenAmount\",tokenAmount)\n        console.log(\"quoteTokenAmount\",quoteTokenAmount)\n      const [info, totalAllocPoint] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        quoteTokenAmount: quoteTokenAmount.toJSON(),\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: quoteTokenAmount.div(tokenAmount).toJSON(),\n        poolWeight: poolWeight.toJSON(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingMany',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import merge from 'lodash/merge'\nimport { getContract } from 'utils/web3'\nimport pancakeProfileAbi from 'config/abi/pancakeProfile.json'\nimport teamsList from 'config/constants/teams'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { Team } from 'config/constants/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { TeamsById, TeamResponse } from 'state/types'\n\nconst profileContract = getContract(pancakeProfileAbi, getPancakeProfileAddress())\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const {\n      0: teamName,\n      2: numberUsers,\n      3: numberPoints,\n      4: isJoinable,\n    } = await profileContract.methods.getTeamProfile(teamId).call()\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers,\n      points: numberPoints,\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.methods.numberTeams().call()\n    const calls = []\n\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push(profileContract.methods.getTeamProfile(i).call)\n    }\n\n    const teamData = (await makeBatchRequest(calls)) as TeamResponse[]\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: Number(numberUsers),\n          points: Number(numberPoints),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","import {\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n} from 'utils/addressHelpers'\nimport { getContract } from 'utils/web3'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\n\nexport const getProfileContract = () => {\n  return getContract(profileABI, getPancakeProfileAddress())\n}\n\nexport const getPancakeRabbitContract = () => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress())\n}\n\nexport const getBunnyFactoryContract = () => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress())\n}\n\nexport const getBunnySpecialContract = () => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress())\n}\n\nexport default null\n","import { getWeb3 } from './web3'\n\n/**\n * Accepts an array of contract method calls and batches them\n *\n * Example:\n *\n * [\n *  contract.method.balanceOf().call,\n *  contract.method.startBlockNumber().call\n * ]\n */\nconst makeBatchRequest = (calls: any[]) => {\n  try {\n    const web3 = getWeb3()\n    const batch = new web3.BatchRequest()\n\n    const promises = calls.map((call) => {\n      return new Promise((resolve, reject) => {\n        batch.add(\n          call.request({}, (err, result) => {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(result)\n            }\n          }),\n        )\n      })\n    })\n\n    batch.execute()\n\n    return Promise.all(promises)\n  } catch {\n    return null\n  }\n}\n\nexport default makeBatchRequest\n","import { Ifo } from './types'\n\nconst ifos: Ifo[] = [\n  {\n    id: 'berry',\n    address: '0xab2177b8bd9fc86a2241e1f6ab0fc6392D889672',\n    isActive: true,\n    name: 'ManySwap',\n    subTitle: 'First AMM with affiliates on BSC',\n    description:\n      'MANYSWAP is the first decentralised AMM with affiliates system on revolutionary Binance Smart Chain. ManySwap enables the user to swap tokens and to create a new liquidity pair. By adding to the LP pair users can earn LP token and LP fees. On referring usercan earn 0.1% of trading fees. Stake your LP tokens in the farm and earn rewards. ',\n    launchDate: 'Feb. 25',\n    launchTime: '04:00PM UTC',\n    saleAmount: '1,000,000 MANY',\n    raiseAmount: '$1,000,000',\n    cakeToBurn: '$500,000',\n    projectSiteUrl: 'https://manyswap.io/',\n    currency: 'CAKE-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 18,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n  },\n]\n\nexport default ifos\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import { getProfileContract } from 'utils/contractHelpers'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string) => {\n  try {\n    const profileContract = getProfileContract()\n    const events = await profileContract.getPastEvents('UserPointIncrease', {\n      fromBlock: 'earliest',\n      toBlock: 'latest',\n      filter: {\n        userAddress: account,\n      },\n    })\n\n    return events\n  } catch (error) {\n    return []\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  return pointIncreaseEvents.reduce((accum, event) => {\n    if (!campaignMap.has(event.returnValues.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(event.returnValues.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: event.returnValues.campaignId,\n        type: campaignMeta.type,\n        address: event.address,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(event.returnValues.numberPoints),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { toastTypes } from '@pancakeswap-libs/uikit'\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { kebabCase } from 'lodash'\nimport { push } from 'state/toasts'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data.concat(action.payload)\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    const title = 'Error fetching achievements'\n    dispatch(push({ id: kebabCase(title), type: toastTypes.DANGER, title }))\n  }\n}\n\nexport default achievementSlice.reducer\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const mainNetChainId = 56\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(addresses.many)\n}\nexport const getSaleAddress = () => {\n  return getAddress(addresses.sale)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.mulltiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(addresses.wbnb)\n}\nexport const getLotteryAddress = () => {\n  return getAddress(addresses.lottery)\n}\nexport const getLotteryTicketAddress = () => {\n  return getAddress(addresses.lotteryNFT)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\n","import { Campaign } from 'config/constants/types'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport { getContract } from 'utils/web3'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport makeBatchRequest from './makeBatchRequest'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: string\n}\n\nexport const getPointCenterClaimContract = () => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress())\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        id: 999,\n        fallback: `IFO Shopper: ${campaign.title}`,\n        data: {\n          name: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        id: 999,\n        fallback: `Committed more than $5 worth of LP in the ${campaign.title} IFO`,\n        data: {\n          name: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligble to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\n  const pointCenterContract = getPointCenterClaimContract()\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatuses = (await pointCenterContract.methods\n    .checkClaimStatuses(account, ifoCampaignAddresses)\n    .call()) as boolean[]\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await makeBatchRequest(\n    claimStatuses.reduce((accum, claimStatus, index) => {\n      if (claimStatus === true) {\n        return [...accum, pointCenterContract.methods.ifos(ifoCampaignAddresses[index]).call]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(claimableIfoDataItem.numberPoints),\n      },\n    ]\n  }, [])\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(20)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\nexport const CAKE_POOL_PID = 0\nexport const BASE_EXCHANGE_URL = 'https://exchange.manyswap.io'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap-libs/uikit'\nimport Loader from 'react-loader-spinner'\nimport Page from './layout/Page'\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={100} width={100} timeout={3000} />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","export default {\n  cake: {\n    97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  },\n  syrup: {\n    97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n  },\n  masterChef: {\n    97: '0x1C515985c6318550Afb5bC590f4f0843b977250A',\n    56: '0x1C515985c6318550Afb5bC590f4f0843b977250A',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  wbnb: {\n    97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n  },\n  lottery: {\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\n  },\n  lotteryNFT: {\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    97: '',\n  },\n  ust: {\n    56: '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n    97: '',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  eth: {\n    56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    97: '',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  sale: {\n    56: '0xab2177b8bd9fc86a2241e1f6ab0fc6392D889672',\n    97: '0xab2177b8bd9fc86a2241e1f6ab0fc6392D889672',\n  },\n  many:{\n    56:'0x2dD6c9c5BCD16816226542688788932c6e79A600',\n    97:'0x2dD6c9c5BCD16816226542688788932c6e79A600'\n  }\n}\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport { clear, remove, push } from './toasts'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\n","import { useContext } from 'react'\nimport { isEmpty } from 'lodash'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\ninterface ContextData {\n  [key: string]: number | string\n}\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string, data: ContextData = {}) => {\n    if (translations.length === 0) {\n      return fallback\n    }\n\n    const foundTranslation = translations.find((translation) => {\n      return translation.data.stringId === translationId\n    })\n\n    if (foundTranslation) {\n      const { text } = foundTranslation.data\n      const includesVariable = text.includes('%')\n\n      if (includesVariable) {\n        let interpolatedText = text\n\n        // If dynamic tags are found but no data was passed return the fallback\n        if (isEmpty(data)) {\n          return fallback\n        }\n\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey])\n        })\n\n        return interpolatedText\n      }\n\n      return text\n    }\n\n    return fallback\n  }\n}\n\nexport default useI18n\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getAddress,\n  getMasterChefAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getBunnyFactoryAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getPointCenterIfoAddress,\n  getBunnySpecialAddress,\n  getSaleAddress,\n} from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport bunnyFactory from 'config/abi/bunnyFactory.json'\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport profile from 'config/abi/pancakeProfile.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport bunnySpecial from 'config/abi/bunnySpecial.json'\nimport saleAbi from 'config/abi/sale.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useBunnyFactory = () => {\n  const bunnyFactoryAbi = (bunnyFactory as unknown) as AbiItem\n  return useContract(bunnyFactoryAbi, getBunnyFactoryAddress())\n}\n\nexport const usePancakeRabbits = () => {\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\n  return useContract(pancakeRabbitsAbi, getPancakeRabbitsAddress())\n}\n\nexport const useProfile = () => {\n  const profileABIAbi = (profile as unknown) as AbiItem\n  return useContract(profileABIAbi, getPancakeProfileAddress())\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useSousChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, getAddress(config.contractAddress))\n}\n\nexport const usePointCenterIfoContract = () => {\n  const abi = (pointCenterIfo as unknown) as AbiItem\n  return useContract(abi, getPointCenterIfoAddress())\n}\n\nexport const useBunnySpecialContract = () => {\n  const abi = (bunnySpecial as unknown) as AbiItem\n  return useContract(abi, getBunnySpecialAddress())\n}\nexport const useSaleContract = (address: string) => {\n  const abi = (saleAbi as unknown) as AbiItem\n  return useContract(abi, getSaleAddress())\n}\n\nexport default useContract\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || httpProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  // if (pid === 0) {\n  //   return masterChefContract.methods\n  //     .enterStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n  //     .send({ from: account, gas: 200000 })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const saleManyBnb = async (saleManyContract, amount, account) => {\n  console.log('Inhelperamount', amount)\n  console.log('Inhelperaccount', account)\n\n  return saleManyContract.methods\n    .purchaseMANYTokens()\n    .send({ from: account, gas: 5000000, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .withdraw(pid,new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .withdraw(pid,'0')\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import { TranslatableText } from 'state/types'\n\nexport type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n  campaignId?: string\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' ='CAKE',\n  'MANY' = 'MANY',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n  'ETH' = 'ETH',\n  'COMP' = 'COMP',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  images: NftImages\n  sortOrder: number\n  bunnyId: number\n  video?: NftVideo\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n  console.log(\"multicall\" ,res)\n  return res\n}\n\nexport default multicall\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    tokenName: 'CAKE',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x1C515985c6318550Afb5bC590f4f0843b977250A',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://pancakeswap.finance/',\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 53,\n    tokenName: 'DODO',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://dodoex.io/',\n    harvest: true,\n    tokenPerBlock: '0.0578',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 52,\n    tokenName: 'SWINGBY',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://swingby.network/',\n    harvest: true,\n    tokenPerBlock: '0.13',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 51,\n    tokenName: 'BRY',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://berrydata.co/',\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 50,\n    tokenName: 'ZEE',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://zeroswap.io/',\n    harvest: true,\n    tokenPerBlock: '0.1736',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 49,\n    tokenName: 'SWGb',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://swirgepay.com/',\n    harvest: true,\n    tokenPerBlock: '0.899',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 48,\n    image: 'CAKECOMP',\n    tokenName: 'CAKE',\n    stakingTokenName: QuoteToken.COMP,\n    stakingTokenAddress: '0x52ce071bd9b1c4b00a0b92d298c512478cad67e8',\n    stakingLimit: 1,\n    contractAddress: {\n      97: '',\n      56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://compound.finance/',\n    harvest: true,\n    tokenPerBlock: '0.055',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 47,\n    image: 'CAKECOMP',\n    tokenName: 'CAKE',\n    stakingTokenName: QuoteToken.COMP,\n    stakingTokenAddress: '0x52ce071bd9b1c4b00a0b92d298c512478cad67e8',\n    stakingLimit: 1,\n    contractAddress: {\n      97: '',\n      56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://compound.finance/',\n    harvest: true,\n    tokenPerBlock: '0.55',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 46,\n    tokenName: 'SFP',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.safepal.io/',\n    harvest: true,\n    tokenPerBlock: '0.6',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 45,\n    tokenName: 'LINA',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://linear.finance/',\n    harvest: true,\n    tokenPerBlock: '0.983',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 44,\n    tokenName: 'LINA',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://linear.finance/',\n    harvest: true,\n    tokenPerBlock: '0.0983',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 43,\n    tokenName: 'LIT',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.litentry.com/',\n    harvest: true,\n    tokenPerBlock: '0.231',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 42,\n    tokenName: 'HGET',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.hedget.com/',\n    harvest: true,\n    tokenPerBlock: '0.0138',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 6,\n  },\n  {\n    sousId: 41,\n    tokenName: 'BDO',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://bdollar.fi/',\n    harvest: true,\n    tokenPerBlock: '0.075',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 40,\n    tokenName: 'EGLD',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://elrond.com/',\n    harvest: true,\n    tokenPerBlock: '0.001215',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 39,\n    tokenName: 'UST',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://mirror.finance/',\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 38,\n    tokenName: 'wSOTE',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://soteria.finance/#/',\n    harvest: true,\n    tokenPerBlock: '0.23',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 37,\n    tokenName: 'FRONT',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://frontier.xyz/',\n    harvest: true,\n    tokenPerBlock: '0.2546',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 36,\n    tokenName: 'Helmet',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.helmet.insure/',\n    harvest: true,\n    tokenPerBlock: '0.81',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 35,\n    tokenName: 'BTCST',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.1-b.tc/',\n    harvest: true,\n    tokenPerBlock: '0.011574',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 34,\n    tokenName: 'BSCX',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://bscex.org/',\n    harvest: true,\n    tokenPerBlock: '0.17361',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 33,\n    tokenName: 'TEN',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.tenet.farm/',\n    harvest: true,\n    tokenPerBlock: '0.05787',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 32,\n    tokenName: 'bALBT',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://allianceblock.io/',\n    harvest: true,\n    tokenPerBlock: '0.4166',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 31,\n    tokenName: 'ASR',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.chiliz.com',\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 2,\n  },\n  {\n    sousId: 30,\n    tokenName: 'ATM',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.chiliz.com',\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 2,\n  },\n  {\n    sousId: 29,\n    tokenName: 'OG',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.chiliz.com',\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 2,\n  },\n  {\n    sousId: 28,\n    tokenName: 'REEF',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://reef.finance/',\n    harvest: true,\n    tokenPerBlock: '115.74',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 27,\n    tokenName: 'DITTO',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://ditto.money/',\n    harvest: true,\n    tokenPerBlock: '0.01157',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 9,\n  },\n  {\n    sousId: 26,\n    image: 'CAKETWT',\n    tokenName: 'CAKE',\n    stakingTokenName: QuoteToken.TWT,\n    stakingTokenAddress: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n    stakingLimit: 1000,\n    contractAddress: {\n      97: '',\n      56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://trustwallet.com/',\n    harvest: true,\n    tokenPerBlock: '0.248',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 24,\n    tokenName: 'JUV',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.chiliz.com',\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 2,\n  },\n  {\n    sousId: 25,\n    tokenName: 'PSG',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.chiliz.com',\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 2,\n  },\n  {\n    sousId: 22,\n    tokenName: 'JUV',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x27Bd41E77cab966a57232915292410ACfD2761Ac',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.chiliz.com',\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 2,\n  },\n  {\n    sousId: 23,\n    tokenName: 'PSG',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x1DA236Ec18D80ADd7740baD2A74cdA2ADb9E17bE',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.chiliz.com',\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 2,\n  },\n  {\n    sousId: 21,\n    tokenName: 'VAI',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://venus.io/',\n    harvest: true,\n    tokenPerBlock: '0.104',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 20,\n    image: 'CAKEBNB',\n    tokenName: 'CAKE',\n    stakingTokenName: QuoteToken.BNB,\n    stakingLimit: 10,\n    contractAddress: {\n      97: '',\n      56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\n    },\n    poolCategory: PoolCategory.BINANCE,\n    projectLink: 'https://pancakeswap.finance/',\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 19,\n    tokenName: 'BNB',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://pancakeswap.finance/',\n    harvest: true,\n    tokenPerBlock: '0.0041',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 18,\n    tokenName: 'BLK',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://blink.wink.org',\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 6,\n  },\n  {\n    sousId: 17,\n    tokenName: 'BLK',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://blink.wink.org',\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 16,\n    tokenName: 'UNFI',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://unifiprotocol.com',\n    harvest: true,\n    tokenPerBlock: '0.02893',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 15,\n    tokenName: 'TWT',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://trustwallet.com/',\n    harvest: true,\n    tokenPerBlock: '5',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 14,\n    tokenName: 'HARD',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://hard.kava.io',\n    harvest: true,\n    tokenPerBlock: '0.346',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 6,\n  },\n  {\n    sousId: 13,\n    tokenName: 'bROOBEE',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '',\n      56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    projectLink: 'https://roobee.io/',\n    harvest: true,\n    tokenPerBlock: '12.5',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 12,\n    tokenName: 'STAX',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    projectLink: 'http://stablexswap.com/',\n    harvest: true,\n    tokenPerBlock: '0.2',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 11,\n    tokenName: 'NAR',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    projectLink: 'https://narwhalswap.org/',\n    harvest: true,\n    tokenPerBlock: '1',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 10,\n    tokenName: 'NYA',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    projectLink: 'https://nyanswop.org/',\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10',\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 9,\n    tokenName: 'CTK',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.certik.foundation/',\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 6,\n  },\n  {\n    sousId: 8,\n    tokenName: 'TWT',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://trustwallet.com/',\n    harvest: true,\n    tokenPerBlock: '20',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 7,\n    tokenName: 'INJ',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://injectiveprotocol.com/',\n    harvest: true,\n    tokenPerBlock: '0.25',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 6,\n    tokenName: 'CTK',\n    stakingTokenName: QuoteToken.SYRUP,\n    stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xF35d63Df93f32e025bce4A1B98dcEC1fe07AD892',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.certik.foundation/',\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 5,\n    tokenName: 'CTK',\n    stakingTokenName: QuoteToken.SYRUP,\n    stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.certik.foundation/',\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 6,\n  },\n  {\n    sousId: 4,\n    tokenName: 'SXP',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xD32B30b151a6aDB2e0Fa573a37510C097DaBD2F3',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://swipe.io/',\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 3,\n    tokenName: 'INJ',\n    stakingTokenName: QuoteToken.SYRUP,\n    stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0x92E8CeB7eAeD69fB6E4d9dA43F605D2610214E68',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://injectiveprotocol.com/',\n    harvest: true,\n    tokenPerBlock: '0.25',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 2,\n    tokenName: 'ALPHA',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x73c83bd1646991cBca3e6b83ca905542FE07C57A',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://alphafinance.io/',\n    harvest: true,\n    tokenPerBlock: '20',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 1,\n    tokenName: 'TWT',\n    stakingTokenName: QuoteToken.SYRUP,\n    stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://trustwallet.com/',\n    harvest: true,\n    tokenPerBlock: '20',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: -1,\n    tokenName: 'XVS',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n    },\n    tokenPerBlock: '0',\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://venus.io/',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n]\n\nexport default pools\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { kebabCase } from 'lodash'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Toast, toastTypes } from '@pancakeswap-libs/uikit'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Team } from 'config/constants/types'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  push as pushToast,\n  remove as removeToast,\n  clear as clearToast,\n} from './actions'\nimport { State, Farm, Pool, ProfileState, TeamsState, AchievementState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 2 // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  console.log(\"farm.tokenPriceVsQuote\",farm.tokenPriceVsQuote)\n  return farm.tokenPriceVsQuote ? new BigNumber(1).div(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const pid = 0 // CAKE-BNB LP\n  const bnbPriceUSD = usePriceBnbBusd()\n  const farm = useFarmFromPid(pid)\n  console.log(\"bnbPriceUSD\",bnbPriceUSD)\n  console.log(\"usePriceCakeBusd\",bnbPriceUSD.times(farm.tokenPriceVsQuote))\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceEthBusd = (): BigNumber => {\n  const pid = 4 // ETH-BNB LP\n  const bnbPriceUSD = usePriceBnbBusd()\n  const farm = useFarmFromPid(pid)\n  console.log(\"tokenPriceVsQuoteeth\",farm.tokenPriceVsQuote)\n  console.log(\"bnbPriceUSDeth\",bnbPriceUSD)\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceEthBnb = (): BigNumber => {\n  const priceBnbBusd = usePriceBnbBusd()\n  const priceEthBusd = usePriceEthBusd()\n  return priceEthBusd.div(priceBnbBusd)\n}\n\n// Toasts\nexport const useToast = () => {\n  const dispatch = useDispatch()\n  const helpers = useMemo(() => {\n    const push = (toast: Toast) => dispatch(pushToast(toast))\n\n    return {\n      toastError: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\n      },\n      toastInfo: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\n      },\n      toastSuccess: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\n      },\n      toastWarning: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\n      },\n      push,\n      remove: (id: string) => dispatch(removeToast(id)),\n      clear: () => dispatch(clearToast()),\n    }\n  }, [dispatch])\n\n  return helpers\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWallet()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWallet()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    \n      pid: 0,\n      lpSymbol: 'MANY-BNB LP',\n      lpAddresses: {\n        97: '0x5a37fb91a243835458064f771f4612f15e368f76',\n        56: '0x5a37fb91a243835458064f771f4612f15e368f76',\n      },\n      tokenSymbol: 'MANY',\n      tokenAddresses: {\n        97: '0x2dD6c9c5BCD16816226542688788932c6e79A600',\n        56: '0x2dD6c9c5BCD16816226542688788932c6e79A600',\n      },\n      quoteTokenSymbol: QuoteToken.BNB,\n      quoteTokenAdresses: contracts.wbnb,\n    },\n    {\n    pid: 1,\n    lpSymbol: 'MANY-BUSD LP',\n    lpAddresses: {\n      97: '0x033cAa5A86118F0114Fb1789f48da0024259F486',\n      56: '0x033cAa5A86118F0114Fb1789f48da0024259F486',\n    },\n    tokenSymbol: 'MANY',\n    tokenAddresses: {\n      97: '0x2dD6c9c5BCD16816226542688788932c6e79A600',\n      56: '0x2dD6c9c5BCD16816226542688788932c6e79A600',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'BNB-BUSD LP',\n    lpAddresses: {\n      97: '0xd9AD3EBE9aad28201DcCCf21C11237dBda8631C3',\n      56: '0xd9AD3EBE9aad28201DcCCf21C11237dBda8631C3',\n    },\n    tokenSymbol: 'BUSD',\n    tokenAddresses: {\n      97: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'ETH-BUSD LP',\n    lpAddresses: {\n      97: '0x07cAaB012D6Ee77013B17d2E1F51F1894f93BeC4',\n      56: '0x07cAaB012D6Ee77013B17d2E1F51F1894f93BeC4',\n    },\n    tokenSymbol: 'MANY',\n    tokenAddresses: {\n      97: '0x2dD6c9c5BCD16816226542688788932c6e79A600',\n      56: '0x2dD6c9c5BCD16816226542688788932c6e79A600',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 4,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '0xe33d111f809517e740539f78de11ec69909c3bde',\n      56: '0xe33d111f809517e740539f78de11ec69909c3bde',\n    },\n    tokenSymbol: 'MANY',\n    tokenAddresses: {\n      97: '0x2dD6c9c5BCD16816226542688788932c6e79A600',\n      56: '0x2dD6c9c5BCD16816226542688788932c6e79A600',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 5,\n    lpSymbol: 'MANY-BDO LP',\n    lpAddresses: {\n      97: '0x4Cd45f075e65E7Df128e4c0B1B43Df85F0C5dC41',\n      56: '0x4Cd45f075e65E7Df128e4c0B1B43Df85F0C5dC41',\n    },\n    tokenSymbol: 'MANY',\n    tokenAddresses: {\n      97: '0x2dD6c9c5BCD16816226542688788932c6e79A600',\n      56: '0x2dD6c9c5BCD16816226542688788932c6e79A600',\n    },\n    quoteTokenSymbol: QuoteToken.MANY,\n    quoteTokenAdresses: contracts.many,\n  },\n  {\n    pid: 6,\n    lpSymbol: 'MANY-BRY LP',\n    lpAddresses: {\n      97: '0x9e9902fc5797365ec4c7a0ad5ceb4dbc9d5931f8',\n      56: '0x9e9902fc5797365ec4c7a0ad5ceb4dbc9d5931f8',\n    },\n    tokenSymbol: 'MANY',\n    tokenAddresses: {\n      97: '0x2dD6c9c5BCD16816226542688788932c6e79A600',\n      56: '0x2dD6c9c5BCD16816226542688788932c6e79A600',\n    },\n    quoteTokenSymbol: QuoteToken.MANY,\n    quoteTokenAdresses: contracts.many,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'MANY-CAKE LP',\n    lpAddresses: {\n      97: '0x5a4CFDee2848B12fCb6872A17b30dFF5a9262B6D',\n      56: '0x5a4CFDee2848B12fCb6872A17b30dFF5a9262B6D',\n    },\n    tokenSymbol: 'MANY',\n    tokenAddresses: {\n      97: '0x2dD6c9c5BCD16816226542688788932c6e79A600',\n      56: '0x2dD6c9c5BCD16816226542688788932c6e79A600',\n    },\n    quoteTokenSymbol: QuoteToken.MANY,\n    quoteTokenAdresses: contracts.many,\n  },\n  {\n    pid: 8,\n    lpSymbol: 'MANY-SUSHI LP',\n    lpAddresses: {\n      97: '0xd45e492A508548b6146fC028BC20e8E4995974C4',\n      56: '0xd45e492A508548b6146fC028BC20e8E4995974C4',\n    },\n    tokenSymbol: 'MANY',\n    tokenAddresses: {\n      97: '0x2dD6c9c5BCD16816226542688788932c6e79A600',\n      56: '0x2dD6c9c5BCD16816226542688788932c6e79A600',\n    },\n    quoteTokenSymbol: QuoteToken.MANY,\n    quoteTokenAdresses: contracts.many,\n  },\n  {\n    pid: 9,\n    lpSymbol: 'MANY-BAKE LP',\n    lpAddresses: {\n      97: '0x2A7e87c8619B9181DE4135F0A9f28bCdB9451327',\n      56: '0x2A7e87c8619B9181DE4135F0A9f28bCdB9451327',\n    },\n    tokenSymbol: 'MANY',\n    tokenAddresses: {\n      97: '0x2dD6c9c5BCD16816226542688788932c6e79A600',\n      56: '0x2dD6c9c5BCD16816226542688788932c6e79A600',\n    },\n    quoteTokenSymbol: QuoteToken.MANY,\n    quoteTokenAdresses: contracts.many,\n  },\n  {\n    pid: 10,\n    lpSymbol: 'BNB-CAKE LP',\n    lpAddresses: {\n      97: '0x19fc76B7162baF99E223683dd7AF37220E7EF3Dd',\n      56: '0x19fc76B7162baF99E223683dd7AF37220E7EF3Dd',\n    },\n    tokenSymbol: 'MANY',\n    tokenAddresses: {\n      97: '0x2dD6c9c5BCD16816226542688788932c6e79A600',\n      56: '0x2dD6c9c5BCD16816226542688788932c6e79A600',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  }\n  // {\n  //   pid: 77,\n  //   lpSymbol: 'DODO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9e642d174b14faea31d842dc83037c42b53236e6',\n  //   },\n  //   tokenSymbol: 'DODO',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x67ee3cb086f8a16f34bee3ca72fad36f7db929e2',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 76,\n  //   lpSymbol: 'SWINGBY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4576C456AF93a37a096235e5d83f812AC9aeD027',\n  //   },\n  //   tokenSymbol: 'SWINGBY',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 75,\n  //   lpSymbol: 'BRY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5E3CD27F36932Bc0314aC4e2510585798C34a2fC',\n  //   },\n  //   tokenSymbol: 'BRY',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 74,\n  //   lpSymbol: 'ZEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb5ab3996808c7e489dcdc0f1af2ab212ae0059af',\n  //   },\n  //   tokenSymbol: 'ZEE',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x44754455564474a89358b2c2265883df993b12f0',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 73,\n  //   lpSymbol: 'SWGb-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc1800c29cf91954357cd0bf3f0accaada3d0109c',\n  //   },\n  //   tokenSymbol: 'SWGb',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 72,\n  //   lpSymbol: 'COMP-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0392957571f28037607c14832d16f8b653edd472',\n  //   },\n  //   tokenSymbol: 'COMP',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x52ce071bd9b1c4b00a0b92d298c512478cad67e8',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.ETH,\n  //   quoteTokenAdresses: contracts.eth,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 71,\n  //   lpSymbol: 'SFP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcbe2cf3bd012e9c1ade2ee4d41db3dac763e78f3',\n  //   },\n  //   tokenSymbol: 'SFP',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xd41fdb03ba84762dd66a0af1a6c8540ff1ba5dfb',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 70,\n  //   lpSymbol: 'BETH-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x99d865ed50d2c32c1493896810fa386c1ce81d91',\n  //   },\n  //   tokenSymbol: 'BETH',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x250632378e573c6be1ac2f97fcdf00515d0aa91b',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.ETH,\n  //   quoteTokenAdresses: contracts.eth,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 69,\n  //   lpSymbol: 'LINA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xeb325a8ea1c5abf40c7ceaf645596c1f943d0948',\n  //   },\n  //   tokenSymbol: 'LINA',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x762539b45a1dcce3d36d080f74d1aed37844b878',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 68,\n  //   lpSymbol: 'LIT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x60bB03D1010b99CEAdD0dd209b64bC8bd83da161',\n  //   },\n  //   tokenSymbol: 'LIT',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xb59490ab09a0f526cc7305822ac65f2ab12f9723',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 67,\n  //   lpSymbol: 'HGET-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x66b9e1eac8a81f3752f7f3a5e95de460688a17ee',\n  //   },\n  //   tokenSymbol: 'HGET',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xc7d8d35eba58a0935ff2d5a33df105dd9f071731',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 66,\n  //   lpSymbol: 'BDO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x74690f829fec83ea424ee1f1654041b2491a7be9',\n  //   },\n  //   tokenSymbol: 'BDO',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x190b589cf9fb8ddeabbfeae36a813ffb2a702454',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 65,\n  //   lpSymbol: 'EGLD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3ef4952c7a9afbe374ea02d1bf5ed5a0015b7716',\n  //   },\n  //   tokenSymbol: 'EGLD',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 63,\n  //   lpSymbol: 'UST-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD1F12370b2ba1C79838337648F820a87eDF5e1e6',\n  //   },\n  //   tokenSymbol: 'UST',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 62,\n  //   lpSymbol: 'mAMZN-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc92Dc34665c8a21f98E1E38474580b61b4f3e1b9',\n  //   },\n  //   tokenSymbol: 'mAMZN',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.UST,\n  //   quoteTokenAdresses: contracts.ust,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 61,\n  //   lpSymbol: 'mGOOGL-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x852A68181f789AE6d1Da3dF101740a59A071004f',\n  //   },\n  //   tokenSymbol: 'mGOOGL',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.UST,\n  //   quoteTokenAdresses: contracts.ust,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 60,\n  //   lpSymbol: 'mNFLX-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF609ade3846981825776068a8eD7746470029D1f',\n  //   },\n  //   tokenSymbol: 'mNFLX',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.UST,\n  //   quoteTokenAdresses: contracts.ust,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 59,\n  //   lpSymbol: 'mTSLA-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD5664D2d15cdffD597515f1c0D945c6c1D3Bf85B',\n  //   },\n  //   tokenSymbol: 'mTSLA',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.UST,\n  //   quoteTokenAdresses: contracts.ust,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 58,\n  //   lpSymbol: 'wSOTE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xffb9e2d5ce4378f1a89b29bf53f80804cc078102',\n  //   },\n  //   tokenSymbol: 'wSOTE',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x541e619858737031a1244a5d0cd47e5ef480342c',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 57,\n  //   lpSymbol: 'FRONT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x36b7d2e5c7877392fb17f9219efad56f3d794700',\n  //   },\n  //   tokenSymbol: 'FRONT',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 56,\n  //   lpSymbol: 'Helmet-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6411310c07d8c48730172146fd6f31fa84034a8b',\n  //   },\n  //   tokenSymbol: 'Helmet',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 55,\n  //   lpSymbol: 'BTCST-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x91589786D36fEe5B27A5539CfE638a5fc9834665',\n  //   },\n  //   tokenSymbol: 'BTCST',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x78650b139471520656b9e7aa7a5e9276814a38e9',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 54,\n  //   lpSymbol: 'LTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbc765fd113c5bdb2ebc25f711191b56bb8690aec',\n  //   },\n  //   tokenSymbol: 'LTC',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x4338665cbb7b2485a8855a139b75d5e34ab0db94',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 53,\n  //   lpSymbol: 'USDC-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n  //   },\n  //   tokenSymbol: 'USDC',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 52,\n  //   lpSymbol: 'DAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3aB77e40340AB084c3e23Be8e5A6f7afed9D41DC',\n  //   },\n  //   tokenSymbol: 'DAI',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 51,\n  //   lpSymbol: 'BSCX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x20781bc3701c5309ac75291f5d09bdc23d7b7fa8',\n  //   },\n  //   tokenSymbol: 'BSCX',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x5ac52ee5b2a633895292ff6d8a89bb9190451587',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 50,\n  //   lpSymbol: 'TEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x01ecc44ddd2d104f44d2aa1a2bd9dfbc91ae8275',\n  //   },\n  //   tokenSymbol: 'TEN',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xdff8cb622790b7f92686c722b02cab55592f152c',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 49,\n  //   lpSymbol: 'bALBT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbe14f3a89a4f7f279af9d99554cf12e8c29db921',\n  //   },\n  //   tokenSymbol: 'bALBT',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x72faa679e1008ad8382959ff48e392042a8b06f7',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 46,\n  //   lpSymbol: 'OG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x64373608f2e93ea97ad4d8ca2cce6b2575db2f55',\n  //   },\n  //   tokenSymbol: 'OG',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xf05e45ad22150677a017fbd94b84fbb63dc9b44c',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 47,\n  //   lpSymbol: 'ASR-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd6b900d5308356317299dafe303e661271aa12f1',\n  //   },\n  //   tokenSymbol: 'ASR',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x80d5f92c2c8c682070c95495313ddb680b267320',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 48,\n  //   lpSymbol: 'ATM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd5b3ebf1a85d32c73a82b40f75e1cd929caf4029',\n  //   },\n  //   tokenSymbol: 'ATM',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x25e9d05365c867e59c1904e7463af9f312296f9e',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 45,\n  //   lpSymbol: 'REEF-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x58B58cab6C5cF158f63A2390b817710826d116D0',\n  //   },\n  //   tokenSymbol: 'REEF',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xf21768ccbc73ea5b6fd3c687208a7c2def2d966e',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 44,\n  //   lpSymbol: 'Ditto-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x470bc451810b312bbb1256f96b0895d95ea659b1',\n  //   },\n  //   tokenSymbol: 'DITTO',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 43,\n  //   lpSymbol: 'JUV-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x51a2ffa5b7de506f9a22549e48b33f6cf0d9030e',\n  //   },\n  //   tokenSymbol: 'JUV',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xc40c9a843e1c6d01b7578284a9028854f6683b1b',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 42,\n  //   lpSymbol: 'PSG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9c4f6a5050cf863e67a402e8b377973b4e3372c1',\n  //   },\n  //   tokenSymbol: 'PSG',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xbc5609612b7c44bef426de600b5fd1379db2ecf1',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 39,\n  //   lpSymbol: 'UNFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbEA35584b9a88107102ABEf0BDeE2c4FaE5D8c31',\n  //   },\n  //   tokenSymbol: 'UNFI',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 41,\n  //   lpSymbol: 'VAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xff17ff314925dff772b71abdff2782bc913b3575',\n  //   },\n  //   tokenSymbol: 'VAI',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x4bd17003473389a42daf6a0a729f6fdb328bbbd7',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 40,\n  //   lpSymbol: 'BLK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC743Dc05F03D25E1aF8eC5F8228f4BD25513c8d0',\n  //   },\n  //   tokenSymbol: 'BLK',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 37,\n  //   lpSymbol: 'HARD-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x9f40e8a2fcaa267a0c374b6c661e0b372264cc3d',\n  //   },\n  //   tokenSymbol: 'HARD',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xf79037f6f6be66832de4e7516be52826bc3cbcc4',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   isCommunity: false,\n  // },\n  // {\n    \n  // {\n  //   pid: 3,\n  //   lpSymbol: 'ADA-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n  //     56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf',\n  //   },\n  //   tokenSymbol: 'ADA',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 4,\n  //   lpSymbol: 'BAND-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n  //     56: '0xc639187ef82271d8f517de6feae4faf5b517533c',\n  //   },\n  //   tokenSymbol: 'BAND',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xad6caeb32cd2c308980a548bd0bc5aa4306c6c18',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 5,\n  //   lpSymbol: 'DOT-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\n  //   },\n  //   tokenSymbol: 'DOT',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 6,\n  //   lpSymbol: 'EOS-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x981d2ba1b298888408d342c39c2ab92e8991691e',\n  //   },\n  //   tokenSymbol: 'EOS',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x56b6fb708fc5732dec1afc8d8556423a2edccbd6',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 7,\n  //   lpSymbol: 'LINK-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\n  //   },\n  //   tokenSymbol: 'LINK',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 11,\n  //   lpSymbol: 'USDT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xc15fa3E22c912A276550F3E5FE3b0Deb87B55aCd',\n  //   },\n  //   tokenSymbol: 'USDT',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x55d398326f99059ff775485246999027b3197955',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 12,\n  //   lpSymbol: 'TWT-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x610e7a287c27dfFcaC0F0a94f547Cc1B770cF483',\n  //   },\n  //   tokenSymbol: 'TWT',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 13,\n  //   lpSymbol: 'XVS-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x41182c32F854dd97bA0e0B1816022e0aCB2fc0bb',\n  //   },\n  //   tokenSymbol: 'XVS',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n \n  // {\n  //   pid: 15,\n  //   lpSymbol: 'BTCB-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\n  //   },\n  //   tokenSymbol: 'BTC',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 16,\n  //   lpSymbol: 'ALPHA-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x4e0f3385d932F7179DeE045369286FFa6B03d887',\n  //   },\n  //   tokenSymbol: 'ALPHA',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xa1faa113cbe53436df28ff0aee54275c13b40975',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 17,\n  //   lpSymbol: 'USDT-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x20bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd',\n  //   },\n  //   tokenSymbol: 'USDT',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x55d398326f99059ff775485246999027b3197955',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 18,\n  //   lpSymbol: 'XRP-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xc7b4b32a3be2cb6572a1c9959401f832ce47a6d2',\n  //   },\n  //   tokenSymbol: 'XRP',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 19,\n  //   lpSymbol: 'ATOM-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x2333c77fc0b2875c11409cdcd3c75d42d402e834',\n  //   },\n  //   tokenSymbol: 'ATOM',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x0eb3a705fc54725037cc9e008bdede697f62f335',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 20,\n  //   lpSymbol: 'YFII-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x574a978c2d0d36d707a05e459466c7a1054f1210',\n  //   },\n  //   tokenSymbol: 'YFII',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x7f70642d88cf1c4a3a7abb072b53b929b653eda5',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 21,\n  //   lpSymbol: 'DAI-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x56c77d59e82f33c712f919d09fceddf49660a829',\n  //   },\n  //   tokenSymbol: 'DAI',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 22,\n  //   lpSymbol: 'XTZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x5acac332f0f49c8badc7afd0134ad19d3db972e6',\n  //   },\n  //   tokenSymbol: 'XTZ',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x16939ef78684453bfdfb47825f8a5f714f12623a',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 23,\n  //   lpSymbol: 'BCH-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x54edd846db17f43b6e43296134ecd96284671e81',\n  //   },\n  //   tokenSymbol: 'BCH',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x8ff795a6f4d97e7887c79bea79aba5cc76444adf',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 24,\n  //   lpSymbol: 'YFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x68Ff2ca47D27db5Ac0b5c46587645835dD51D3C1',\n  //   },\n  //   tokenSymbol: 'YFI',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x88f1a5ae2a3bf98aeaf342d26b30a79438c9142e',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 25,\n  //   lpSymbol: 'UNI-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x4269e7F43A63CEA1aD7707Be565a94a9189967E9',\n  //   },\n  //   tokenSymbol: 'UNI',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 26,\n  //   lpSymbol: 'FIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\n  //   },\n  //   tokenSymbol: 'FIL',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 27,\n  //   lpSymbol: 'INJ-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7a34bd64d18e44CfdE3ef4B81b87BAf3EB3315B6',\n  //   },\n  //   tokenSymbol: 'INJ',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xa2b726b1145a4773f68593cf171187d8ebe4d495',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 29,\n  //   lpSymbol: 'USDC-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\n  //   },\n  //   tokenSymbol: 'USDC',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 30,\n  //   lpSymbol: 'SXP-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x752E713fB70E3FA1Ac08bCF34485F14A986956c4',\n  //   },\n  //   tokenSymbol: 'SXP',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x47bead2563dcbf3bf2c9407fea4dc236faba485a',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 32,\n  //   lpSymbol: 'CTK-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7793870484647a7278907498ec504879d6971EAb',\n  //   },\n  //   tokenSymbol: 'CTK',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xa8c2b8eec3d368c0253ad3dae65a5f2bbb89c929',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 34,\n  //   lpSymbol: 'STAX-CAKE LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7cd05f8b960ba071fdf69c750c0e5a57c8366500',\n  //   },\n  //   tokenSymbol: 'STAX',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.CAKE,\n  //   quoteTokenAdresses: contracts.cake,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 35,\n  //   lpSymbol: 'NAR-CAKE LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x745c4fd226e169d6da959283275a8e0ecdd7f312',\n  //   },\n  //   tokenSymbol: 'NAR',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xa1303e6199b319a891b79685f0537d289af1fc83',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.CAKE,\n  //   quoteTokenAdresses: contracts.cake,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 36,\n  //   lpSymbol: 'NYA-CAKE LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x2730bf486d658838464a4ef077880998d944252d',\n  //   },\n  //   tokenSymbol: 'NYA',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xbfa0841f7a90c4ce6643f651756ee340991f99d5',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.CAKE,\n  //   quoteTokenAdresses: contracts.cake,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 38,\n  //   lpSymbol: 'bROOBEE-CAKE LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x970858016C963b780E06f7DCfdEf8e809919BcE8',\n  //   },\n  //   tokenSymbol: 'bROOBEE',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xe64f5cb844946c1f102bd25bbd87a5ab4ae89fbe',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.CAKE,\n  //   quoteTokenAdresses: contracts.cake,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 8,\n  //   lpSymbol: 'BAKE-BNB Bakery LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xc2eed0f5a0dc28cfa895084bc0a9b8b8279ae492',\n  //   },\n  //   tokenSymbol: 'BAKE',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 9,\n  //   lpSymbol: 'BURGER-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xd937FB9E6e47F3805981453BFB277a49FFfE04D7',\n  //   },\n  //   tokenSymbol: 'BURGER',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xae9269f27437f0fcbc232d39ec814844a51d6b8f',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 10,\n  //   lpSymbol: 'BAKE-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x3Da30727ed0626b78C212e81B37B97A8eF8A25bB',\n  //   },\n  //   tokenSymbol: 'BAKE',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n]\n\nexport default farms\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStatking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\n  const bnbPool = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingTokenAddress,\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingMany('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import { getPancakeProfileAddress, getPancakeRabbitsAddress } from 'utils/addressHelpers'\nimport pancakeProfileAbi from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport { Nft } from 'config/constants/types'\nimport { getContract } from 'utils/web3'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport nfts from 'config/constants/nfts'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getContract(pancakeProfileAbi, getPancakeProfileAddress())\nconst rabbitContract = getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress())\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      const bunnyId = await rabbitContract.methods.getBunnyId(tokenId).call()\n      nft = nfts.find((nftItem) => nftItem.bunnyId === Number(bunnyId))\n\n      // Save the preview image to local storage for the exchange\n      localStorage.setItem(\n        `profile_${address}`,\n        JSON.stringify({\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft.images.sm}`,\n        }),\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, addPoints } = profileSlice.actions\n\n// Thunks\nexport const fetchProfile = (address: string) => async (dispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap-libs/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  AR,\n  CA,\n  ZHCN,\n  ZHTW,\n  CS,\n  DA,\n  DE,\n  NL,\n  FIL,\n  FI,\n  FR,\n  EL,\n  HI,\n  HU,\n  ID,\n  IT,\n  JA,\n  KO,\n  PTBR,\n  RO,\n  RU,\n  SR,\n  ESES,\n  SVSE,\n  TA,\n  TR,\n  UK,\n  VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations([])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          setTranslations([])\n          console.error('Error while loading translations', e)\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeContext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@pancakeswap-libs/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    href: `https://exchange.manyswap.io/?r=${window.localStorage.getItem('refer')}`,\n  },\n  {\n    label: 'Farms',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Public Sale',\n    icon: 'IfoIcon',\n    href: '/ifo',\n  },\n  {\n    label: 'Document',\n    icon: 'MoreIcon',\n    href: 'https://manyswap.io/IFO_GUIDE.pdf',\n  },\n  {\n    label: 'Info',\n    icon: 'InfoIcon',\n    href: 'https://info.manyswap.io/',\n   \n  },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\n\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { ToastContainer, Toast } from '@pancakeswap-libs/uikit'\nimport { useToast } from 'state/hooks'\nimport { State } from 'state/types'\n\nconst ToastListener = () => {\n  const toasts: Toast[] = useSelector((state: State) => state.toasts.data)\n  const { remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Image, Button } from '@pancakeswap-libs/uikit'\nimport { CommunityTag } from 'components/Tags'\nimport useI18n from 'hooks/useI18n'\nimport Card from './Card'\nimport CardTitle from './CardTitle'\n\nconst Balance = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 40px;\n  font-weight: 600;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  margin-bottom: 16px;\n`\n\nconst DetailPlaceholder = styled.div`\n  display: flex;\n  font-size: 14px;\n`\nconst Value = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 14px;\n`\n\nconst Footer = styled.div`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  padding: 24px;\n`\nconst Coming: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <div style={{ padding: '24px' }}>\n        <CardTitle>\n          {TranslateString(414, 'Your Project?')}{' '}\n          <span role=\"img\" aria-label=\"eyes\">\n            👀\n          </span>\n        </CardTitle>\n        <Image src=\"/images/bunny-question.svg\" width={64} height={64} alt=\"Your project here\" />\n        <Balance>???</Balance>\n        <Label>{TranslateString(416, 'Create a pool for your token')}</Label>\n        <Button\n          variant=\"secondary\"\n          as=\"a\"\n          href=\"https://docs.google.com/forms/d/e/1FAIpQLScGdT5rrVMr4WOWr08pvcroSeuIOtEJf1sVdQGVdcAOqryigQ/viewform\"\n          external\n          fullWidth\n          mb=\"16px\"\n        >\n          {TranslateString(418, 'Apply Now')}\n        </Button>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          <Value>??</Value>\n        </DetailPlaceholder>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label=\"syrup\">\n              🥞{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Value>??? CAKE</Value>\n        </DetailPlaceholder>\n      </div>\n      <Footer>\n        <CommunityTag />\n      </Footer>\n    </Card>\n  )\n}\n\nexport default Coming\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(704, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  🥞{' '}\n                </span>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n            {sousId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(704, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `MANY earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n              🥞{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = ({ stackedOnly, setStackedOnly }) => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ToggleWrapper>\n        <Toggle checked={stackedOnly} onChange={() => setStackedOnly(!stackedOnly)} />\n        <Text> {TranslateString(999, 'Staked only')}</Text>\n      </ToggleWrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(698, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(700, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 32px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React, { useState } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePriceBnbBusd, usePools, usePriceEthBnb } from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const ethPriceBnb = usePriceEthBnb()\n  const block = useBlock()\n  const [stackedOnly, setStackedOnly] = useState(false)\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // tmp mulitplier to support ETH farms\n    // Will be removed after the price api\n    const tempMultiplier = stakingTokenFarm?.quoteTokenSymbol === 'ETH' ? ethPriceBnb : 1\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = isBnbPool\n      ? new BigNumber(1)\n      : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote).times(tempMultiplier)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n  const stackedOnlyPools = openPools.filter(\n    (pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(738, 'Syrup Pool')}\n          </Heading>\n          <ul>\n            <li>{TranslateString(580, 'Stake CAKE to earn new tokens.')}</li>\n            <li>{TranslateString(486, 'You can unstake at any time.')}</li>\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\n          </ul>\n        </div>\n        <img src=\"/images/syrup.png\" alt=\"SYRUP POOL icon\" width={410} height={191} />\n      </Hero>\n      <PoolTabButtons stackedOnly={stackedOnly} setStackedOnly={setStackedOnly} />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {stackedOnly\n              ? orderBy(stackedOnlyPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)\n              : orderBy(openPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)}\n            <Coming />\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n","import { useEffect, useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { getBunnySpecialContract } from 'utils/contractHelpers'\n\nexport const BULL_NFT = 11\nexport const HICCUP_NFT = 10\n\nconst bunnySpecialContract = getBunnySpecialContract()\n\nconst useGetBullHiccupClaimableStatus = () => {\n  const [hasChecked, setHasChecked] = useState(false)\n  const [claimables, setClaimables] = useState({\n    [BULL_NFT]: false,\n    [HICCUP_NFT]: false,\n  })\n  const { account } = useWallet()\n\n  useEffect(() => {\n    const checkClaimableStatus = async () => {\n      const [isBullClaimable, isHiccupClaimable] = (await bunnySpecialContract.methods\n        .canClaimMultiple(account, [BULL_NFT, HICCUP_NFT])\n        .call()) as boolean[]\n\n      setClaimables({\n        [BULL_NFT]: isBullClaimable,\n        [HICCUP_NFT]: isHiccupClaimable,\n      })\n      setHasChecked(true)\n    }\n\n    if (account) {\n      checkClaimableStatus()\n    }\n  }, [account, setClaimables, setHasChecked])\n\n  return {\n    isSomeClaimable: Object.values(claimables).some((status) => status === true),\n    isBullClaimable: claimables[BULL_NFT],\n    isHiccupClaimable: claimables[HICCUP_NFT],\n    hasChecked,\n  }\n}\n\nexport default useGetBullHiccupClaimableStatus\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, Flex, InjectedModalProps } from '@pancakeswap-libs/uikit'\nimport history from 'routerHistory'\nimport { delay } from 'lodash'\nimport useI18n from 'hooks/useI18n'\nimport confetti from 'canvas-confetti'\nimport nftList from 'config/constants/nfts'\nimport { BULL_NFT, HICCUP_NFT } from '../hooks/useGetBullHiccupClaimableStatus'\n\ninterface ClaimBullHiccupNftModalProps extends InjectedModalProps {\n  isBullClaimable: boolean\n  isHiccupClaimable: boolean\n}\n\nconst bullNft = nftList.find((nft) => nft.bunnyId === BULL_NFT)\nconst hiccupNft = nftList.find((nft) => nft.bunnyId === HICCUP_NFT)\n\nconst NftImage = styled.img`\n  border-radius: 50%;\n  margin-bottom: 24px;\n`\n\nconst showConfetti = () => {\n  confetti({\n    resize: true,\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3,\n    },\n  })\n}\n\nconst renderNftPreview = (isBullClaimable: boolean, isHiccupClaimable: boolean) => {\n  if (isBullClaimable && isHiccupClaimable) {\n    return <img src=\"/images/bull-hiccup.png\" height=\"128px\" width=\"128px\" alt=\"nft\" style={{ marginBottom: '24px' }} />\n  }\n\n  if (isBullClaimable) {\n    return <NftImage src={`/images/nfts/${bullNft.images.md}`} height=\"128px\" width=\"128px\" alt=\"nft\" />\n  }\n\n  return <NftImage src={`/images/nfts/${hiccupNft.images.md}`} height=\"128px\" width=\"128px\" alt=\"nft\" />\n}\n\nconst ClaimBullHiccupNftModal: React.FC<ClaimBullHiccupNftModalProps> = ({\n  isBullClaimable,\n  isHiccupClaimable,\n  onDismiss,\n}) => {\n  const TranslateString = useI18n()\n  const collectibleMessage =\n    isBullClaimable && isHiccupClaimable\n      ? TranslateString(999, 'You won two Collectibles!')\n      : TranslateString(999, 'You won a collectible!')\n\n  // This is required because the modal exists outside the Router\n  const handleClick = () => {\n    onDismiss()\n    history.push('/collectibles')\n  }\n\n  useEffect(() => {\n    delay(showConfetti, 100)\n  }, [])\n\n  return (\n    <Modal title={TranslateString(999, 'Congratulations!')} onDismiss={onDismiss}>\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        {renderNftPreview(isBullClaimable, isHiccupClaimable)}\n        <Text bold color=\"secondary\" fontSize=\"24px\" mb=\"24px\">\n          {collectibleMessage}\n        </Text>\n        <Button onClick={handleClick}>{TranslateString(999, 'Claim now')}</Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ClaimBullHiccupNftModal\n","import React, { useEffect, useRef } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useModal } from '@pancakeswap-libs/uikit'\nimport useGetBullHiccupClaimableStatus from '../hooks/useGetBullHiccupClaimableStatus'\nimport ClaimBullHiccupNftModal from './ClaimBullHiccupNftModal'\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckBullHiccupClaimStatus = () => {\n  const hasDisplayedModal = useRef(false)\n  const { isSomeClaimable, isBullClaimable, isHiccupClaimable } = useGetBullHiccupClaimableStatus()\n  const [onPresentGiftModal] = useModal(\n    <ClaimBullHiccupNftModal isBullClaimable={isBullClaimable} isHiccupClaimable={isHiccupClaimable} />,\n  )\n  const { account } = useWallet()\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    if (!pathname.includes('/collectibles') && isSomeClaimable && !hasDisplayedModal.current) {\n      onPresentGiftModal()\n      hasDisplayedModal.current = true\n    }\n  }, [pathname, isSomeClaimable, hasDisplayedModal, onPresentGiftModal])\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false\n  }, [account, hasDisplayedModal])\n\n  return null\n}\n\nexport default GlobalCheckBullHiccupClaimStatus\n","import React, { useEffect, Suspense, lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport queryString from 'query-string'\nimport BigNumber from 'bignumber.js'\nimport { useFetchProfile, useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport Pools from './views/Pools'\nimport GlobalCheckBullHiccupClaimStatus from './views/Collectibles/components/GlobalCheckBullHiccupClaimStatus'\nimport history from './routerHistory'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  const parsedHash = queryString.parse(window.location.search);\n  if(parsedHash.r)\n  {\n  localStorage.setItem(\"refer\",(parsedHash.r).toString())\n  }\n  else\n  {\n    localStorage.setItem(\"refer\",'0x0000000000000000000000000000000000000000')\n  }\n\n  // Monkey patch warn() because of web3 flood\n  // To be removed when web3 1.3.5 is released\n  useEffect(() => {\n    console.warn = () => null\n  }, [])\n\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  \n  }, [account, connect])\n\n  useFetchPublicData()\n  useFetchProfile()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            {/* Redirect */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n      <ToastListener />\n      <GlobalCheckBullHiccupClaimStatus />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport toastsReducer from './toasts'\nimport poolsReducer from './pools'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    toasts: toastsReducer,\n    pools: poolsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    achievements: achievementsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\nimport bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <UseWalletProvider\n            chainId={parseInt(process.env.REACT_APP_CHAIN_ID)}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","/* eslint-disable no-param-reassign */\nimport { Toast } from '@pancakeswap-libs/uikit'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ToastsState } from '../types'\n\nconst initialState: ToastsState = {\n  data: [],\n}\n\nexport const toastsSlice = createSlice({\n  name: 'toasts',\n  initialState,\n  reducers: {\n    push: (state: ToastsState, action: PayloadAction<Toast>) => {\n      const { payload } = action\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\n\n      // If id already matches remove it before adding it to the top of the stack\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n\n      state.data.unshift(payload)\n    },\n    remove: (state: ToastsState, action: PayloadAction<string>) => {\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\n\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n    },\n    clear: (state: ToastsState) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { clear, remove, push } = toastsSlice.actions\n\nexport default toastsSlice.reducer\n"],"sourceRoot":""}