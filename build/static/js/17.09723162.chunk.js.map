{"version":3,"sources":["views/Ifos/components/IfoTabButtons/index.tsx","views/Ifos/components/Hero.tsx","views/Ifos/components/IfoCard/IfoCardHeader.tsx","views/Ifos/components/IfoCard/IfoCardDescription.tsx","views/Ifos/components/IfoCard/IfoCardDetails.tsx","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/Title.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/PastIfo.tsx","views/Ifos/index.tsx"],"names":["Wrapper","styled","div","IfoTabButtons","useRouteMatch","url","isExact","activeIndex","size","variant","as","Link","to","Title","Heading","attrs","theme","colors","secondary","Blurb","Text","StyledHero","Hero","TranslateString","useI18n","Container","StyledIfoCardHeader","Flex","Name","Description","textSubtle","IfoCardHeader","ifoId","name","subTitle","mb","alignItems","src","alt","width","height","StyledIfoCardDescription","Divider","borderColor","ToggleButton","button","primary","isOpen","IfoCardDescription","defaultIsOpen","description","useState","setIsOpen","onClick","StyledIfoCardDetails","Item","Display","IfoCardDetails","launchDate","launchTime","saleAmount","raiseAmount","projectSiteUrl","cakeToBurn","raisingAmount","totalAmount","href","target","rel","ml","style","display","margin","StyledIfoCard","Card","IfoCard","input","props","ifo","id","address","releaseBlockNumber","currency","currencyAddress","tokenDecimals","isLoading","status","blocksRemaining","secondsUntilStart","progress","secondsUntilEnd","BigNumber","startBlockNum","endBlockNum","tempTextBoxValue","state","setState","account","useWallet","contract","useSaleContract","currentBlock","useBlock","Ribbon","variantColor","text","getRibbonComponent","useCallback","a","console","log","saleManyBnb","useEffect","fetchProgress","isActive","ribbon","IfoCardWrapper","mediaQueries","md","isSingle","defaultProps","LaunchIfoCallout","BaseLayout","sm","List","ul","activeIfo","ifosConfig","find","Ifo","IfoCards","mr","pt","responsive","inactiveIfo","filter","PastIfo","map","Ifos","path","exact","CurrentIfo"],"mappings":"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","file":"static/js/17.09723162.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 39px;\n`\n\nconst IfoTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          Public Sale\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link}>Many Swap</ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default IfoTabButtons\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport Container from 'components/layout/Container'\nimport useI18n from 'hooks/useI18n'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(315deg, #fce043 0%, #fb7ba2 74%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n  margin-bottom: 32px;\n`\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <Container>\n        <Title>{TranslateString(500, 'Public Sale')}</Title>\n        <Blurb>{TranslateString(502, 'Buy MANY Tokens with BNB')}</Blurb>\n      </Container>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, Flex } from '@pancakeswap-libs/uikit'\n\ninterface IfoCardHeaderProps {\n  ifoId: string\n  name: string\n  subTitle: string\n}\n\nconst StyledIfoCardHeader = styled(Flex)`\n  & > div {\n    flex: 1;\n  }\n`\n\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\n  margin-bottom: 4px;\n  text-align: right;\n`\n\nconst Description = styled(Text)`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  text-align: right;\n`\n\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => {\n  return (\n    <StyledIfoCardHeader mb=\"24px\" alignItems=\"center\">\n      <img src={`/images/ifos/${ifoId}.svg`} alt={ifoId} width=\"64px\" height=\"64px\" />\n      <div>\n        <Name>{name}</Name>\n        <Description>{subTitle}</Description>\n      </div>\n    </StyledIfoCardHeader>\n  )\n}\n\nexport default IfoCardHeader\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardDescriptionProps {\n  defaultIsOpen?: boolean\n  description: string\n}\n\nconst StyledIfoCardDescription = styled.div`\n  margin-top: 24px;\n  margin-bottom: 24px;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90%;\n`\n\nconst ToggleButton = styled.button`\n  background: transparent;\n  border: none;\n  color: ${({ theme }) => theme.colors.primary};\n  cursor: pointer;\n  display: block;\n  font-weight: 600;\n  outline: 0;\n  padding: 24px 16px;\n  width: 100%;\n`\n\nconst Description = styled(Text)<{ isOpen: boolean }>`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  display: ${({ isOpen }) => (isOpen ? 'block' : 'none')};\n`\n\nconst IfoCardDescription: React.FC<IfoCardDescriptionProps> = ({ defaultIsOpen = true, description }) => {\n  const [isOpen, setIsOpen] = useState(defaultIsOpen)\n  const TranslateString = useI18n()\n\n  const handleClick = () => setIsOpen(!isOpen)\n\n  return (\n    <StyledIfoCardDescription>\n      <Divider />\n      <ToggleButton onClick={handleClick}>\n        {isOpen ? TranslateString(1066, 'Hide') : TranslateString(1064, 'Show')}\n      </ToggleButton>\n      <Description isOpen={isOpen}>{description}</Description>\n    </StyledIfoCardDescription>\n  )\n}\n\nexport default IfoCardDescription\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, LinkExternal, Link } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardDetailsProps {\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  raisingAmount: BigNumber\n  totalAmount: BigNumber\n}\n\nconst StyledIfoCardDetails = styled.div`\n  margin-bottom: 24px;\n`\n\nconst Item = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.secondary};\n  display: flex;\n`\n\nconst Display = styled(Text)`\n  flex: 1;\n`\n\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({\n  launchDate,\n  launchTime,\n  saleAmount,\n  raiseAmount,\n  cakeToBurn,\n  projectSiteUrl,\n  raisingAmount,\n  totalAmount,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <StyledIfoCardDetails>\n        <Item>\n          <Display>{TranslateString(582, 'Launch Time')}</Display>\n          <Text>\n            {launchDate},\n            <Link\n              href=\"https://www.timeanddate.com/worldclock/singapore/singapore\"\n              target=\"blank\"\n              rel=\"noopener noreferrer\"\n              ml=\"4px\"\n              style={{ display: 'inline' }}\n            >\n              {launchTime}\n            </Link>\n          </Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(584, 'For Sale')}</Display>\n          <Text>{saleAmount}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(999, 'To raise (USD)')}</Display>\n          <Text>{raiseAmount}</Text>\n        </Item>\n\n        <Item>\n          <Display>{TranslateString(999, 'Many to BNB')}</Display>\n          <Text>{TranslateString(999, '1MANY = $1')}</Text>\n        </Item>\n      </StyledIfoCardDetails>\n      <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\n        {TranslateString(412, 'View project site')}\n      </LinkExternal>\n    </>\n  )\n}\n\nexport default IfoCardDetails\n","import React, { useCallback, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, CardRibbon, Button, Text } from '@pancakeswap-libs/uikit'\nimport { BSC_BLOCK_TIME } from 'config'\nimport { Ifo, IfoStatus } from 'config/constants/types'\nimport { saleManyBnb } from 'utils/callHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { useIfoContract, useSaleContract } from 'hooks/useContract'\nimport UnlockButton from 'components/UnlockButton'\nimport IfoCardHeader from './IfoCardHeader'\nimport IfoCardProgress from './IfoCardProgress'\nimport IfoCardDescription from './IfoCardDescription'\nimport IfoCardDetails from './IfoCardDetails'\nimport IfoCardTime from './IfoCardTime'\nimport IfoCardContribute from './IfoCardContribute'\n\nexport interface IfoCardProps {\n  ifo: Ifo\n}\n\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\n  background-image: ${({ ifoId }) => `url('/images/ifos/${ifoId}-bg.svg')`};\n  background-repeat: no-repeat;\n  background-size: contain;\n  padding-top: 112px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 437px;\n  width: 100%;\n`\n\nconst TextBox = styled.input`\n  width: 100%;\n  background: ${(props) => props.theme.colors.input};\n  border: 1;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  border-radius: 8px;\n  height: 56px;\n  margin: 0;\n  margin-bottom: 5px;\n  padding: 0;\n  outline: none;\n`\n\nconst getStatus = (currentBlock: number, startBlock: number, endBlock: number): IfoStatus | null => {\n  if (currentBlock < startBlock) {\n    return 'coming_soon'\n  }\n\n  if (currentBlock >= startBlock && currentBlock <= endBlock) {\n    return 'live'\n  }\n\n  if (currentBlock > endBlock) {\n    return 'finished'\n  }\n\n  return null\n}\n\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\n  if (status === 'coming_soon') {\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'Coming Soon')} />\n  }\n\n  if (status === 'live') {\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'FINISHED')} />\n  }\n\n  return null\n}\n\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\n  const {\n    id,\n    address,\n    name,\n    subTitle,\n    description,\n    launchDate,\n    launchTime,\n    saleAmount,\n    raiseAmount,\n    cakeToBurn,\n    projectSiteUrl,\n    currency,\n    currencyAddress,\n    tokenDecimals,\n    releaseBlockNumber,\n  } = ifo\n  const [state, setState] = useState({\n    isLoading: true,\n    status: null,\n    blocksRemaining: 0,\n    secondsUntilStart: 0,\n    progress: 0,\n    secondsUntilEnd: 0,\n    raisingAmount: new BigNumber(0),\n    totalAmount: new BigNumber(0),\n    startBlockNum: 0,\n    endBlockNum: 0,\n    tempTextBoxValue: null,\n  })\n  const { account } = useWallet()\n  const contract = useSaleContract(address)\n\n  const currentBlock = useBlock()\n  const TranslateString = useI18n()\n\n  const Ribbon = getRibbonComponent('live', TranslateString)\n\n  const onBuyNow = useCallback(async () => {\n    console.log('OnBuyNow new contract1 ', state.tempTextBoxValue)\n\n    try {\n      await saleManyBnb(contract,state.tempTextBoxValue,account)\n      console.log('OnBuy noew contract2 ', state.tempTextBoxValue)\n    } catch (error) {\n      console.log(error)\n    }\n\n    console.log('OnBuy noew clicked3 ', state)\n  }, [account , contract, state])\n\n  useEffect(() => {\n    const fetchProgress = async () => {\n      // const [startBlock, endBlock, raisingAmount, totalAmount] = await makeBatchRequest([\n      //   contract.methods.startBlock().call,\n      //   contract.methods.endBlock().call,\n      //   contract.methods.raisingAmount().call,\n      //   contract.methods.totalAmount().call,\n      // ])\n      // const startBlockNum = parseInt(startBlock as string, 10)\n      // const endBlockNum = parseInt(endBlock as string, 10)\n      // const status = getStatus(currentBlock, startBlockNum, endBlockNum)\n      // const totalBlocks = endBlockNum - startBlockNum\n      // const blocksRemaining = endBlockNum - currentBlock\n      // // Calculate the total progress until finished or until start\n      // const progress =\n      //   currentBlock > startBlockNum\n      //     ? ((currentBlock - startBlockNum) / totalBlocks) * 100\n      //     : ((currentBlock - releaseBlockNumber) / (startBlockNum - releaseBlockNumber)) * 100\n      // setState({\n      //   isLoading: false,\n      //   secondsUntilEnd: blocksRemaining * BSC_BLOCK_TIME,\n      //   secondsUntilStart: (startBlockNum - currentBlock) * BSC_BLOCK_TIME,\n      //   raisingAmount: new BigNumber(raisingAmount as string),\n      //   totalAmount: new BigNumber(totalAmount as string),\n      //   status,\n      //   progress,\n      //   blocksRemaining,\n      //   startBlockNum,\n      //   endBlockNum,\n      //   tempTextBoxValue:''\n      // })\n    }\n\n    fetchProgress()\n  }, [currentBlock, contract, releaseBlockNumber, setState])\n\n  const isActive = state.status === 'live'\n  const isFinished = state.status === 'finished'\n\n  return (\n    <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={isActive}>\n      <CardBody>\n        <IfoCardHeader ifoId={id} name={name} subTitle={subTitle} />\n        {/* <IfoCardProgress progress={state.progress} /> */}\n        {/* <IfoCardTime\n          isLoading={state.isLoading}\n          status={state.status}\n          secondsUntilStart={state.secondsUntilStart}\n          secondsUntilEnd={state.secondsUntilEnd}\n          block={isActive || isFinished ? state.endBlockNum : state.startBlockNum}\n        /> */}\n        {/* {!account && <UnlockButton fullWidth />} */}\n        {/* {account && (\n          <>\n            <TextBox\n              value={state.tempTextBoxValue}\n              placeholder=\"Enter amount of BNB\"\n              onChange={({ target: { value } }) => {\n                setState({ ...state, tempTextBoxValue: value })\n              }}\n            />\n            <Text fontSize= \"20px\">{`You will get ${state.tempTextBoxValue * 220}   MANY Tokens `}</Text>\n            <Button fullWidth onClick={() => onBuyNow()}>\n              Buy now\n            </Button>\n          </>\n        )} */}\n        {/* {(isActive || isFinished) && (\n          <IfoCardContribute\n            address={address}\n            currency={currency}\n            currencyAddress={currencyAddress}\n            contract={contract}\n            status={state.status}\n            raisingAmount={state.raisingAmount}\n            tokenDecimals={tokenDecimals}\n          />\n        )} */}\n        <IfoCardDescription description={description} />\n        <IfoCardDetails\n          launchDate={launchDate}\n          launchTime={launchTime}\n          saleAmount={saleAmount}\n          raiseAmount={raiseAmount}\n          cakeToBurn={cakeToBurn}\n          projectSiteUrl={projectSiteUrl}\n          raisingAmount={state.raisingAmount}\n          totalAmount={state.totalAmount}\n        />\n      </CardBody>\n    </StyledIfoCard>\n  )\n}\n\nexport default IfoCard\n","import styled from 'styled-components'\nimport { Heading } from '@pancakeswap-libs/uikit'\n\nconst Title = styled(Heading).attrs({ size: 'lg' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 16px;\n`\n\nexport default Title\n","import styled from 'styled-components'\n\ninterface IfoCardWrapperProps {\n  isSingle?: boolean\n}\n\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  padding-bottom: 40px;\n  padding-top: 40px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: ${({ isSingle }) => `repeat(${isSingle ? 1 : 2}, 1fr)`};\n  }\n`\n\nIfoCardWrapper.defaultProps = {\n  isSingle: false,\n}\n\nexport default IfoCardWrapper\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from '@pancakeswap-libs/uikit'\nimport { ifosConfig } from 'config/constants'\nimport useI18n from 'hooks/useI18n'\nimport IfoCard from './components/IfoCard'\nimport Title from './components/Title'\nimport IfoCards from './components/IfoCards'\n\nconst LaunchIfoCallout = styled(BaseLayout)`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding: 32px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst List = styled.ul`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n\n  & > li {\n    line-height: 1.4;\n    margin-bottom: 8px;\n  }\n`\n\n/**\n * Note: currently there should be only 1 active IFO at a time\n */\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\n\nconst Ifo = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <IfoCards isSingle>\n        <IfoCard ifo={activeIfo} />\n      </IfoCards>\n      <LaunchIfoCallout>\n        <div>\n          <Title as=\"h2\">{TranslateString(592, 'How to take part')}</Title>\n          <Heading mb=\"16px\">{TranslateString(594, 'Before Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(596, 'Buy BNB tokens')}</li>\n            <li>{TranslateString(598, 'Wait for the sale to start')}</li>\n          </List>\n          <Flex mb=\"16px\">\n            <LinkExternal href=\"https://exchange.pancakeswap.finance/#/swap\" mr=\"16px\">\n              {TranslateString(1060, 'Buy BNB')}\n            </LinkExternal>\n          </Flex>\n          <Heading mb=\"16px\">{TranslateString(600, 'During Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(602, 'While the sale is live, press the Buy button and input the amount of BNB')}</li>\n            <li>{TranslateString(602, 'Confirm the transaction in your wallet')}</li>\n            <li>{TranslateString(602, 'Min amount 0.1 BNB')}</li>\n            <li>{TranslateString(602, 'Max Amount 100 BNB')}</li>\n            <li>{TranslateString(602, 'MANY Tokens will be credited to your account  instantly')}</li>\n          </List>\n\n          <Text as=\"div\" pt=\"16px\">\n            <Button as=\"a\" variant=\"secondary\" href=\"\">\n              {TranslateString(610, 'Read more')}\n            </Button>\n          </Text>\n        </div>\n        <div>\n          <Image src=\"/images/ifobackground.png\" alt=\"ifo bunny\" width={436} height={406} responsive />\n        </div>\n      </LaunchIfoCallout>\n    </div>\n  )\n}\n\nexport default Ifo\n","import React from 'react'\nimport { ifosConfig } from 'config/constants'\nimport { Ifo } from 'config/constants/types'\nimport IfoCard from './components/IfoCard'\nimport IfoCards from './components/IfoCards'\n\nconst inactiveIfo: Ifo[] = ifosConfig.filter((ifo) => !ifo.isActive)\n\nconst PastIfo = () => {\n  return (\n    <IfoCards>\n      {inactiveIfo.map((ifo) => (\n        <IfoCard key={ifo.id} ifo={ifo} />\n      ))}\n    </IfoCards>\n  )\n}\n\nexport default PastIfo\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { getSaleAddress } from 'utils/addressHelpers'\nimport saleAbi from 'config/abi/sale.json'\nimport Container from 'components/layout/Container'\nimport IfoTabButtons from './components/IfoTabButtons'\nimport Hero from './components/Hero'\nimport CurrentIfo from './CurrentIfo'\nimport ComingSoon from './ComingSoon'\n\nimport PastIfo from './PastIfo'\n\nconst Ifos = () => {\n  const { path } = useRouteMatch()\n\n  return (\n    <>\n      <Hero />\n      <Container>\n        <IfoTabButtons />\n        <Route exact path={`${path}`}>\n          <CurrentIfo />\n        </Route>\n        <Route path={`${path}/history`}>\n          <PastIfo />\n        </Route>\n      </Container>\n    </>\n  )\n}\n\nexport default Ifos\n"],"sourceRoot":""}